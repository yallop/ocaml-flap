(* Extracted from https://github.com/draperlaboratory/parts. *)

(* Copyright (c) 2020 The Charles Stark Draper Laboratory, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *)

module Runtime = struct (* from runtime.ml *)
  (** The type of stream internals *)
  type 'a stream_t = { mutable pos : int; byte_stream : bytes }

  let from_file file =
    let ic = open_in file in
    let n = in_channel_length ic in
    let byte_stream = Bytes.create n in
    really_input ic byte_stream 0 n;
    close_in ic;
    { pos = 0; byte_stream = byte_stream }

  let from_string string =
    let n = String.length string in
    let byte_stream = Bytes.create n in
    Bytes.blit_string string 0 byte_stream 0 n;
    { pos = 0; byte_stream = byte_stream }

  (**  This was just for error messages. We should try to extract to just strings?
       picking a buffer of 128 may be insufficient. I dunno. A quick hack
  *)
  let string_of_chars chars =
    let buf = Buffer.create 128 in
    List.iter (Buffer.add_char buf) chars;
    Buffer.contents buf


  let rec fix (f : (('a -> 'b) -> 'a -> 'b)) : 'a -> 'b =
    fun a -> f (fix f) a

  let let_ : 'a -> ('a -> 'b) -> 'b =
    fun x f -> f x

  let ocaml_peek : 'a stream_t -> ('a option -> 'b) -> 'b  =
    fun st k ->
    if st.pos < Bytes.length st.byte_stream then
      let head = Obj.magic (Bytes.unsafe_get st.byte_stream st.pos) in
      k (Some head)
    else
      k None

  let ocaml_drop : 'a stream_t -> ('a stream_t -> 'b) -> 'b  =
    fun st k -> st.pos <- st.pos + 1; k st

  let ocaml_lookahead : 'a stream_t -> ('a stream_t -> 'b) -> 'b =
    fun st k ->
    let old_st = { pos = st.pos; byte_stream = st.byte_stream } in
    k old_st

  exception Parse_fail of string

  let failwith_ : char list -> 'a =
    fun msg ->
    let err_str = Printf.sprintf "Error: %s\n" (string_of_chars msg) in
    raise (Parse_fail err_str)
end

module P_json = struct (* From p_json.ml *)
  (* Auto generated by coq. Do not modify. *)


  type __ = Obj.t
  let __ = let rec f _ = Obj.repr f in Obj.repr f

  type 'a sig0 = 'a
    (* singleton inductive, whose constructor was exist *)

  (** val eof : char list **)

  let eof =
    'U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))

  (** val parse_exact_error_msg : char list **)

  let parse_exact_error_msg =
    'p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))

  type ('str, 'a) stream = { state : 'str;
                             peek_st : (__ -> 'str -> ('a option -> __) -> __);
                             drop_st : (__ -> 'str -> ('str -> __) -> __);
                             lookahead_st : (__ -> 'str -> ('str -> __) -> __) }

  type 'a ocaml_stream = 'a Runtime.stream_t



  type ('st, 'tag, 'tok, 'out) opt =
    ('st -> ('tok ocaml_stream, 'tok) stream -> 'out)

  type json_tok =
  | LCURL
  | RCURL
  | LSQR
  | RSQR
  | COMMA
  | COL
  | STRING of char list
  | TRUE
  | FALSE
  | NULL
  | NUMBER of char list

  type json_tok_tag =
  | LCURLT
  | RCURLT
  | LSQRT
  | RSQRT
  | COMMAT
  | COLT
  | STRINGT
  | TRUET
  | FALSET
  | NULLT
  | NUMBERT

  type json_val =
  | Json_bool of bool
  | Json_null
  | Json_string of char list
  | Json_num of char list
  | Json_list of json_val list
  | Json_obj of (char list * json_val) list

  (** val p_json_opt : (unit, json_tok_tag, json_tok, int) opt **)

  let p_json_opt state0 input =
    let rec rec_v k' m_st stream_st =
      Obj.magic input.peek_st __ stream_st (fun ot ->
        match ot with
        | Some t ->
          (match t with
           | STRING _ ->
             (match t with
              | TRUE ->
                Obj.magic input.drop_st __ stream_st (fun state_str ->
                  k' (Stdlib.succ 0) m_st state_str)
              | _ ->
                (match t with
                 | FALSE ->
                   Obj.magic input.drop_st __ stream_st (fun state_str ->
                     k' (Stdlib.succ 0) m_st state_str)
                 | _ ->
                   (match t with
                    | NULL ->
                      Obj.magic input.drop_st __ stream_st (fun state_str ->
                        k' (Stdlib.succ 0) m_st state_str)
                    | _ ->
                      (match t with
                       | NUMBER _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in (((Json_num o), m_st'), st')))
                           (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')
                       | _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in
                             (((Json_string o), m_st'), st'))) (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')))))
           | TRUE ->
             (match t with
              | TRUE ->
                Obj.magic input.drop_st __ stream_st (fun state_str ->
                  k' (Stdlib.succ 0) m_st state_str)
              | _ ->
                (match t with
                 | FALSE ->
                   Obj.magic input.drop_st __ stream_st (fun state_str ->
                     k' (Stdlib.succ 0) m_st state_str)
                 | _ ->
                   (match t with
                    | NULL ->
                      Obj.magic input.drop_st __ stream_st (fun state_str ->
                        k' (Stdlib.succ 0) m_st state_str)
                    | _ ->
                      (match t with
                       | NUMBER _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in (((Json_num o), m_st'), st')))
                           (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')
                       | _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in
                             (((Json_string o), m_st'), st'))) (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')))))
           | FALSE ->
             (match t with
              | TRUE ->
                Obj.magic input.drop_st __ stream_st (fun state_str ->
                  k' (Stdlib.succ 0) m_st state_str)
              | _ ->
                (match t with
                 | FALSE ->
                   Obj.magic input.drop_st __ stream_st (fun state_str ->
                     k' (Stdlib.succ 0) m_st state_str)
                 | _ ->
                   (match t with
                    | NULL ->
                      Obj.magic input.drop_st __ stream_st (fun state_str ->
                        k' (Stdlib.succ 0) m_st state_str)
                    | _ ->
                      (match t with
                       | NUMBER _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in (((Json_num o), m_st'), st')))
                           (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')
                       | _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in
                             (((Json_string o), m_st'), st'))) (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')))))
           | NULL ->
             (match t with
              | TRUE ->
                Obj.magic input.drop_st __ stream_st (fun state_str ->
                  k' (Stdlib.succ 0) m_st state_str)
              | _ ->
                (match t with
                 | FALSE ->
                   Obj.magic input.drop_st __ stream_st (fun state_str ->
                     k' (Stdlib.succ 0) m_st state_str)
                 | _ ->
                   (match t with
                    | NULL ->
                      Obj.magic input.drop_st __ stream_st (fun state_str ->
                        k' (Stdlib.succ 0) m_st state_str)
                    | _ ->
                      (match t with
                       | NUMBER _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in (((Json_num o), m_st'), st')))
                           (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')
                       | _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in
                             (((Json_string o), m_st'), st'))) (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')))))
           | NUMBER _ ->
             (match t with
              | TRUE ->
                Obj.magic input.drop_st __ stream_st (fun state_str ->
                  k' (Stdlib.succ 0) m_st state_str)
              | _ ->
                (match t with
                 | FALSE ->
                   Obj.magic input.drop_st __ stream_st (fun state_str ->
                     k' (Stdlib.succ 0) m_st state_str)
                 | _ ->
                   (match t with
                    | NULL ->
                      Obj.magic input.drop_st __ stream_st (fun state_str ->
                        k' (Stdlib.succ 0) m_st state_str)
                    | _ ->
                      (match t with
                       | NUMBER _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in (((Json_num o), m_st'), st')))
                           (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')
                       | _ ->
                         Runtime.let_
                           (Runtime.let_
                             (Runtime.let_
                               (Obj.magic input.drop_st __ stream_st
                                 (fun state_str -> ((t, m_st), state_str)))
                               (fun omstst ->
                               let (p, st') = omstst in
                               let (o, m_st') = p in
                               (((match o with
                                  | STRING s -> s
                                  | NUMBER s -> s
                                  | _ -> []), m_st'), st'))) (fun omstst ->
                             let (p, st') = omstst in
                             let (o, m_st') = p in
                             (((Json_string o), m_st'), st'))) (fun omstst ->
                           let (p, st') = omstst in
                           let (_, m_st') = p in
                           k' (Stdlib.succ 0) m_st' st')))))
           | _ ->
             (match t with
              | LCURL ->
                Runtime.let_
                  (Runtime.let_
                    (Obj.magic input.drop_st __ stream_st (fun state_str ->
                      (((), m_st), state_str))) (fun omstst ->
                    let (p, st') = omstst in
                    let (_, m_st') = p in
                    Obj.magic input.peek_st __ st' (fun ot0 ->
                      match ot0 with
                      | Some t0 ->
                        (match t0 with
                         | RCURL ->
                           Runtime.let_
                             (Obj.magic input.drop_st __ st' (fun state_str ->
                               (((), m_st'), state_str))) (fun omstst0 ->
                             let (p0, st'0) = omstst0 in
                             let (_, m_st'0) = p0 in (([], m_st'0), st'0))
                         | _ ->
                           Runtime.let_
                             (Runtime.let_
                               (Runtime.let_
                                 (Runtime.let_
                                   (Runtime.let_
                                     (Runtime.let_
                                       (Runtime.let_
                                         (match t0 with
                                          | STRING _ ->
                                            Runtime.let_
                                              (Obj.magic input.drop_st __ st'
                                                (fun state_str -> ((t0, m_st'),
                                                state_str))) (fun omstst0 ->
                                              let (p0, st'0) = omstst0 in
                                              let (o, m_st'0) = p0 in
                                              (((match o with
                                                 | LCURL -> []
                                                 | RCURL -> []
                                                 | LSQR -> []
                                                 | RSQR -> []
                                                 | COMMA -> []
                                                 | COL -> []
                                                 | STRING s -> s
                                                 | NUMBER s -> s
                                                 | _ -> []), m_st'0), st'0))
                                          | _ ->
                                            Runtime.failwith_
                                              parse_exact_error_msg)
                                         (fun omstst0 ->
                                         let (p0, st'0) = omstst0 in
                                         let (_, m_st'0) = p0 in
                                         Obj.magic input.peek_st __ st'0
                                           (fun ot1 ->
                                           match ot1 with
                                           | Some t1 ->
                                             (match t1 with
                                              | COL ->
                                                Obj.magic input.drop_st __ st'0
                                                  (fun state_str -> (((),
                                                  m_st'0), state_str))
                                              | _ ->
                                                Runtime.failwith_
                                                  parse_exact_error_msg)
                                           | None -> Runtime.failwith_ eof)))
                                       (fun omstst0 ->
                                       let (p0, st'0) = omstst0 in
                                       let (_, m_st'0) = p0 in
                                       Obj.magic rec_v (fun o m_st'1 st'1 ->
                                         ((o, m_st'1), st'1)) m_st'0 st'0))
                                     (fun omstst0 ->
                                     let (p0, st'0) = omstst0 in
                                     let (o, m_st'0) = p0 in
                                     (((Stdlib.succ o), m_st'0), st'0)))
                                   (fun omstst0 ->
                                   let (p0, st'0) = omstst0 in
                                   let (o, m_st'0) = p0 in
                                   Runtime.let_
                                     (let rec rec_v0 k'0 m_st0 stream_st0 =
                                        Obj.magic input.peek_st __ stream_st0
                                          (fun ot1 ->
                                          match ot1 with
                                          | Some t1 ->
                                            (match t1 with
                                             | COMMA ->
                                               Runtime.let_
                                                 (Runtime.let_
                                                   (Obj.magic input.drop_st __
                                                     stream_st0
                                                     (fun state_str -> (((),
                                                     m_st0), state_str)))
                                                   (fun omstst1 ->
                                                   let (p1, st'1) = omstst1 in
                                                   let (_, m_st'1) = p1 in
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.let_
                                                         (Obj.magic
                                                           input.peek_st __
                                                           st'1 (fun ot2 ->
                                                           match ot2 with
                                                           | Some t2 ->
                                                             (match t2 with
                                                              | STRING _ ->
                                                                Runtime.let_
                                                                  (Obj.magic
                                                                    input.drop_st
                                                                    __ st'1
                                                                    (fun state_str ->
                                                                    ((t2,
                                                                    m_st'1),
                                                                    state_str)))
                                                                  (fun omstst2 ->
                                                                  let (
                                                                    p2, st'2) =
                                                                    omstst2
                                                                  in
                                                                  let (
                                                                    o0, m_st'2) =
                                                                    p2
                                                                  in
                                                                  (((match o0 with
                                                                     | LCURL ->
                                                                      []
                                                                     | RCURL ->
                                                                      []
                                                                     | LSQR ->
                                                                      []
                                                                     | RSQR ->
                                                                      []
                                                                     | COMMA ->
                                                                      []
                                                                     | COL -> []
                                                                     | STRING s ->
                                                                      s
                                                                     | NUMBER s ->
                                                                      s
                                                                     | _ -> []),
                                                                  m_st'2), st'2))
                                                              | _ ->
                                                                Runtime.failwith_
                                                                  parse_exact_error_msg)
                                                           | None ->
                                                             Runtime.failwith_
                                                               eof))
                                                         (fun omstst2 ->
                                                         let (p2, st'2) =
                                                           omstst2
                                                         in
                                                         let (_, m_st'2) = p2 in
                                                         Obj.magic
                                                           input.peek_st __
                                                           st'2 (fun ot2 ->
                                                           match ot2 with
                                                           | Some t2 ->
                                                             (match t2 with
                                                              | COL ->
                                                                Obj.magic
                                                                  input.drop_st
                                                                  __ st'2
                                                                  (fun state_str ->
                                                                  (((),
                                                                  m_st'2),
                                                                  state_str))
                                                              | _ ->
                                                                Runtime.failwith_
                                                                  parse_exact_error_msg)
                                                           | None ->
                                                             Runtime.failwith_
                                                               eof)))
                                                       (fun omstst2 ->
                                                       let (p2, st'2) = omstst2
                                                       in
                                                       let (_, m_st'2) = p2 in
                                                       Obj.magic rec_v
                                                         (fun o0 m_st'3 st'3 ->
                                                         ((o0, m_st'3), st'3))
                                                         m_st'2 st'2))
                                                     (fun omstst2 ->
                                                     let (p2, st'2) = omstst2 in
                                                     let (o0, m_st'2) = p2 in
                                                     (((Stdlib.succ o0),
                                                     m_st'2), st'2))))
                                                 (fun omstst1 ->
                                                 let (p1, st'1) = omstst1 in
                                                 let (o0, m_st'1) = p1 in
                                                 Runtime.let_
                                                   (rec_v0
                                                     (fun o1 m_st'2 st'2 ->
                                                     ((o1, m_st'2), st'2))
                                                     m_st'1 st'1)
                                                   (fun omstst2 ->
                                                   let (p2, st'2) = omstst2 in
                                                   let (o1, m_st'2) = p2 in
                                                   k'0 (o0 :: o1) m_st'2 st'2))
                                             | _ -> k'0 [] m_st0 stream_st0)
                                          | None -> k'0 [] m_st0 stream_st0)
                                      in rec_v0 (fun o0 m_st'1 st'1 -> ((o0,
                                           m_st'1), st'1)) m_st'0 st'0)
                                     (fun omstst1 ->
                                     let (p1, st'1) = omstst1 in
                                     let (o0, m_st'1) = p1 in
                                     (((o, o0), m_st'1), st'1))))
                                 (fun omstst0 ->
                                 let (p0, st'0) = omstst0 in
                                 let (o, m_st'0) = p0 in
                                 ((((let (x, _) = o in x) :: (let (_, y) = o in
                                                              y)), m_st'0),
                                 st'0))) (fun omstst0 ->
                               let (p0, st'0) = omstst0 in
                               let (o, m_st'0) = p0 in
                               Runtime.let_
                                 (Obj.magic input.peek_st __ st'0 (fun ot1 ->
                                   match ot1 with
                                   | Some t1 ->
                                     (match t1 with
                                      | RCURL ->
                                        Obj.magic input.drop_st __ st'0
                                          (fun state_str -> (((), m_st'0),
                                          state_str))
                                      | _ ->
                                        Runtime.failwith_ parse_exact_error_msg)
                                   | None -> Runtime.failwith_ eof))
                                 (fun omstst1 ->
                                 let (p1, st'1) = omstst1 in
                                 let (o0, m_st'1) = p1 in
                                 (((o, o0), m_st'1), st'1)))) (fun omstst0 ->
                             let (p0, st'0) = omstst0 in
                             let (o, m_st'0) = p0 in
                             (((let (x, _) = o in x), m_st'0), st'0)))
                      | None -> Runtime.failwith_ eof))) (fun omstst ->
                  let (p, st') = omstst in
                  let (o, m_st') = p in
                  k'
                    (let rec go a = function
                     | [] -> a
                     | x :: l0 -> go ((+) a x) l0
                     in go 0 o) m_st' st')
              | _ ->
                Runtime.let_
                  (Runtime.let_
                    (match t with
                     | LSQR ->
                       Obj.magic input.drop_st __ stream_st (fun state_str ->
                         (((), m_st), state_str))
                     | _ -> Runtime.failwith_ parse_exact_error_msg)
                    (fun omstst ->
                    let (p, st') = omstst in
                    let (_, m_st') = p in
                    Obj.magic input.peek_st __ st' (fun ot0 ->
                      match ot0 with
                      | Some t0 ->
                        (match t0 with
                         | RSQR ->
                           Runtime.let_
                             (Obj.magic input.drop_st __ st' (fun state_str ->
                               (((), m_st'), state_str))) (fun omstst0 ->
                             let (p0, st'0) = omstst0 in
                             let (_, m_st'0) = p0 in (([], m_st'0), st'0))
                         | _ ->
                           Runtime.let_
                             (Runtime.let_
                               (Runtime.let_
                                 (Runtime.let_
                                   (Obj.magic rec_v (fun o m_st'0 st'0 -> ((o,
                                     m_st'0), st'0)) m_st' st') (fun omstst0 ->
                                   let (p0, st'0) = omstst0 in
                                   let (o, m_st'0) = p0 in
                                   Runtime.let_
                                     (let rec rec_v0 k'0 m_st0 stream_st0 =
                                        Obj.magic input.peek_st __ stream_st0
                                          (fun ot1 ->
                                          match ot1 with
                                          | Some t1 ->
                                            (match t1 with
                                             | COMMA ->
                                               Runtime.let_
                                                 (Runtime.let_
                                                   (Obj.magic input.drop_st __
                                                     stream_st0
                                                     (fun state_str -> (((),
                                                     m_st0), state_str)))
                                                   (fun omstst1 ->
                                                   let (p1, st'1) = omstst1 in
                                                   let (_, m_st'1) = p1 in
                                                   Obj.magic rec_v
                                                     (fun o0 m_st'2 st'2 ->
                                                     ((o0, m_st'2), st'2))
                                                     m_st'1 st'1))
                                                 (fun omstst1 ->
                                                 let (p1, st'1) = omstst1 in
                                                 let (o0, m_st'1) = p1 in
                                                 Runtime.let_
                                                   (rec_v0
                                                     (fun o1 m_st'2 st'2 ->
                                                     ((o1, m_st'2), st'2))
                                                     m_st'1 st'1)
                                                   (fun omstst2 ->
                                                   let (p2, st'2) = omstst2 in
                                                   let (o1, m_st'2) = p2 in
                                                   k'0 (o0 :: o1) m_st'2 st'2))
                                             | _ -> k'0 [] m_st0 stream_st0)
                                          | None -> k'0 [] m_st0 stream_st0)
                                      in rec_v0 (fun o0 m_st'1 st'1 -> ((o0,
                                           m_st'1), st'1)) m_st'0 st'0)
                                     (fun omstst1 ->
                                     let (p1, st'1) = omstst1 in
                                     let (o0, m_st'1) = p1 in
                                     (((o, o0), m_st'1), st'1))))
                                 (fun omstst0 ->
                                 let (p0, st'0) = omstst0 in
                                 let (o, m_st'0) = p0 in
                                 ((((let (x, _) = o in x) :: (let (_, y) = o in
                                                              y)), m_st'0),
                                 st'0))) (fun omstst0 ->
                               let (p0, st'0) = omstst0 in
                               let (o, m_st'0) = p0 in
                               Runtime.let_
                                 (Obj.magic input.peek_st __ st'0 (fun ot1 ->
                                   match ot1 with
                                   | Some t1 ->
                                     (match t1 with
                                      | RSQR ->
                                        Obj.magic input.drop_st __ st'0
                                          (fun state_str -> (((), m_st'0),
                                          state_str))
                                      | _ ->
                                        Runtime.failwith_ parse_exact_error_msg)
                                   | None -> Runtime.failwith_ eof))
                                 (fun omstst1 ->
                                 let (p1, st'1) = omstst1 in
                                 let (o0, m_st'1) = p1 in
                                 (((o, o0), m_st'1), st'1)))) (fun omstst0 ->
                             let (p0, st'0) = omstst0 in
                             let (o, m_st'0) = p0 in
                             (((let (x, _) = o in x), m_st'0), st'0)))
                      | None -> Runtime.failwith_ eof))) (fun omstst ->
                  let (p, st') = omstst in
                  let (o, m_st') = p in
                  k'
                    (let rec go a = function
                     | [] -> a
                     | x :: l0 -> go ((+) a x) l0
                     in go 0 o) m_st' st')))
        | None -> Runtime.failwith_ eof)
    in rec_v (fun out _ _ -> out) state0 input.state

  (** val p_full_json_opt :
      ((unit * unit) -> (char ocaml_stream, char) stream -> int) **)

  let p_full_json_opt x x0 =
    Runtime.let_
      (Runtime.let_
        (Runtime.ocaml_peek x0.state (fun x1 ->
          match x1 with
          | Some x2 ->
            if (=) x2 '{'
            then Runtime.ocaml_drop x0.state (fun x3 -> ((LCURL,
                   (let (x4, _) = x in x4)), x3))
            else if (=) x2 '}'
                 then Runtime.ocaml_drop x0.state (fun x3 -> ((RCURL,
                        (let (x4, _) = x in x4)), x3))
                 else if (=) x2 '['
                      then Runtime.ocaml_drop x0.state (fun x3 -> ((LSQR,
                             (let (x4, _) = x in x4)), x3))
                      else if (=) x2 ']'
                           then Runtime.ocaml_drop x0.state (fun x3 -> ((RSQR,
                                  (let (x4, _) = x in x4)), x3))
                           else if (=) x2 ','
                                then Runtime.ocaml_drop x0.state (fun x3 ->
                                       ((COMMA, (let (x4, _) = x in x4)), x3))
                                else if (=) x2 ':'
                                     then Runtime.ocaml_drop x0.state
                                            (fun x3 -> ((COL,
                                            (let (x4, _) = x in x4)), x3))
                                     else if (=) x2 't'
                                          then Runtime.let_
                                                 (Runtime.let_
                                                   (Runtime.let_
                                                     (Runtime.ocaml_drop
                                                       x0.state (fun x3 ->
                                                       (((),
                                                       (let (x4, _) = x in x4)),
                                                       x3))) (fun x3 ->
                                                     let (x4, x5) = x3 in
                                                     let (_, x6) = x4 in
                                                     (((), x6), x5)))
                                                   (fun x3 ->
                                                   let (x4, x5) = x3 in
                                                   let (_, x6) = x4 in
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x5
                                                         (fun x7 ->
                                                         match x7 with
                                                         | Some x8 ->
                                                           if (=) x8 'r'
                                                           then Runtime.ocaml_drop
                                                                  x5 (fun x9 ->
                                                                  (((), x6),
                                                                  x9))
                                                           else Runtime.failwith_
                                                                  ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x7 ->
                                                       let (x8, x9) = x7 in
                                                       let (_, x10) = x8 in
                                                       (((), x10), x9)))
                                                     (fun x7 ->
                                                     let (x8, x9) = x7 in
                                                     let (_, x10) = x8 in
                                                     Runtime.let_
                                                       (Runtime.let_
                                                         (Runtime.ocaml_peek x9
                                                           (fun x11 ->
                                                           match x11 with
                                                           | Some x12 ->
                                                             if (=) x12 'u'
                                                             then Runtime.ocaml_drop
                                                                    x9
                                                                    (fun x13 ->
                                                                    (((), x10),
                                                                    x13))
                                                             else Runtime.failwith_
                                                                    ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                           | None ->
                                                             Runtime.failwith_
                                                               ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                         (fun x11 ->
                                                         let (x12, x13) = x11 in
                                                         let (_, x14) = x12 in
                                                         (((), x14), x13)))
                                                       (fun x11 ->
                                                       let (x12, x13) = x11 in
                                                       let (_, x14) = x12 in
                                                       Runtime.let_
                                                         (Runtime.ocaml_peek
                                                           x13 (fun x15 ->
                                                           match x15 with
                                                           | Some x16 ->
                                                             if (=) x16 'e'
                                                             then Runtime.ocaml_drop
                                                                    x13
                                                                    (fun x17 ->
                                                                    (((), x14),
                                                                    x17))
                                                             else Runtime.failwith_
                                                                    ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                           | None ->
                                                             Runtime.failwith_
                                                               ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                         (fun x15 ->
                                                         let (x16, x17) = x15 in
                                                         let (_, x18) = x16 in
                                                         (((), x18), x17))))))
                                                 (fun x3 ->
                                                 let (x4, x5) = x3 in
                                                 let (_, x6) = x4 in
                                                 ((TRUE, x6), x5))
                                          else if (=) x2 'f'
                                               then Runtime.let_
                                                      (Runtime.let_
                                                        (Runtime.let_
                                                          (Runtime.ocaml_drop
                                                            x0.state (fun x3 ->
                                                            (((),
                                                            (let (x4, _) = x in
                                                             x4)), x3)))
                                                          (fun x3 ->
                                                          let (x4, x5) = x3 in
                                                          let (_, x6) = x4 in
                                                          (((), x6), x5)))
                                                        (fun x3 ->
                                                        let (x4, x5) = x3 in
                                                        let (_, x6) = x4 in
                                                        Runtime.let_
                                                          (Runtime.let_
                                                            (Runtime.ocaml_peek
                                                              x5 (fun x7 ->
                                                              match x7 with
                                                              | Some x8 ->
                                                                if (=) x8 'a'
                                                                then Runtime.ocaml_drop
                                                                      x5
                                                                      (fun x9 ->
                                                                      (((),
                                                                      x6), x9))
                                                                else Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                              | None ->
                                                                Runtime.failwith_
                                                                  ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                            (fun x7 ->
                                                            let (x8, x9) = x7 in
                                                            let (_, x10) = x8 in
                                                            (((), x10), x9)))
                                                          (fun x7 ->
                                                          let (x8, x9) = x7 in
                                                          let (_, x10) = x8 in
                                                          Runtime.let_
                                                            (Runtime.let_
                                                              (Runtime.ocaml_peek
                                                                x9 (fun x11 ->
                                                                match x11 with
                                                                | Some x12 ->
                                                                  if (=) x12 'l'
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x9
                                                                      (fun x13 ->
                                                                      (((),
                                                                      x10),
                                                                      x13))
                                                                  else 
                                                                    Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                | None ->
                                                                  Runtime.failwith_
                                                                    ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                              (fun x11 ->
                                                              let (x12, x13) =
                                                                x11
                                                              in
                                                              let (_, x14) = x12
                                                              in
                                                              (((), x14), x13)))
                                                            (fun x11 ->
                                                            let (x12, x13) = x11
                                                            in
                                                            let (_, x14) = x12
                                                            in
                                                            Runtime.let_
                                                              (Runtime.let_
                                                                (Runtime.ocaml_peek
                                                                  x13
                                                                  (fun x15 ->
                                                                  match x15 with
                                                                  | Some x16 ->
                                                                    if 
                                                                      (=) x16
                                                                      's'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x13
                                                                      (fun x17 ->
                                                                      (((),
                                                                      x14),
                                                                      x17))
                                                                    else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                  | None ->
                                                                    Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                (fun x15 ->
                                                                let (x16, x17) =
                                                                  x15
                                                                in
                                                                let (_, x18) =
                                                                  x16
                                                                in
                                                                (((), x18), x17)))
                                                              (fun x15 ->
                                                              let (x16, x17) =
                                                                x15
                                                              in
                                                              let (_, x18) = x16
                                                              in
                                                              Runtime.let_
                                                                (Runtime.ocaml_peek
                                                                  x17
                                                                  (fun x19 ->
                                                                  match x19 with
                                                                  | Some x20 ->
                                                                    if 
                                                                      (=) x20
                                                                      'e'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x17
                                                                      (fun x21 ->
                                                                      (((),
                                                                      x18),
                                                                      x21))
                                                                    else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                  | None ->
                                                                    Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                (fun x19 ->
                                                                let (x20, x21) =
                                                                  x19
                                                                in
                                                                let (_, x22) =
                                                                  x20
                                                                in
                                                                (((), x22), x21)))))))
                                                      (fun x3 ->
                                                      let (x4, x5) = x3 in
                                                      let (_, x6) = x4 in
                                                      ((FALSE, x6), x5))
                                               else if (=) x2 'n'
                                                    then Runtime.let_
                                                           (Runtime.let_
                                                             (Runtime.let_
                                                               (Runtime.ocaml_drop
                                                                 x0.state
                                                                 (fun x3 ->
                                                                 (((),
                                                                 (let (
                                                                    x4, _) = x
                                                                  in
                                                                  x4)), x3)))
                                                               (fun x3 ->
                                                               let (x4, x5) = x3
                                                               in
                                                               let (_, x6) = x4
                                                               in
                                                               (((), x6), x5)))
                                                             (fun x3 ->
                                                             let (x4, x5) = x3
                                                             in
                                                             let (_, x6) = x4 in
                                                             Runtime.let_
                                                               (Runtime.let_
                                                                 (Runtime.ocaml_peek
                                                                   x5
                                                                   (fun x7 ->
                                                                   match x7 with
                                                                   | Some x8 ->
                                                                     if 
                                                                      (=) x8 'u'
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x5
                                                                      (fun x9 ->
                                                                      (((),
                                                                      x6), x9))
                                                                     else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                   | None ->
                                                                     Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                 (fun x7 ->
                                                                 let (x8, x9) =
                                                                   x7
                                                                 in
                                                                 let (_, x10) =
                                                                   x8
                                                                 in
                                                                 (((), x10), x9)))
                                                               (fun x7 ->
                                                               let (x8, x9) = x7
                                                               in
                                                               let (_, x10) = x8
                                                               in
                                                               Runtime.let_
                                                                 (Runtime.let_
                                                                   (Runtime.ocaml_peek
                                                                     x9
                                                                     (fun x11 ->
                                                                     match x11 with
                                                                     | Some x12 ->
                                                                      if 
                                                                      (=) x12
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x9
                                                                      (fun x13 ->
                                                                      (((),
                                                                      x10),
                                                                      x13))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                     | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                   (fun x11 ->
                                                                   let (
                                                                     x12, x13) =
                                                                     x11
                                                                   in
                                                                   let (
                                                                     _, x14) =
                                                                     x12
                                                                   in
                                                                   (((), x14),
                                                                   x13)))
                                                                 (fun x11 ->
                                                                 let (x12, x13) =
                                                                   x11
                                                                 in
                                                                 let (_, x14) =
                                                                   x12
                                                                 in
                                                                 Runtime.let_
                                                                   (Runtime.ocaml_peek
                                                                     x13
                                                                     (fun x15 ->
                                                                     match x15 with
                                                                     | Some x16 ->
                                                                      if 
                                                                      (=) x16
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x13
                                                                      (fun x17 ->
                                                                      (((),
                                                                      x14),
                                                                      x17))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                     | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                   (fun x15 ->
                                                                   let (
                                                                     x16, x17) =
                                                                     x15
                                                                   in
                                                                   let (
                                                                     _, x18) =
                                                                     x16
                                                                   in
                                                                   (((), x18),
                                                                   x17))))))
                                                           (fun x3 ->
                                                           let (x4, x5) = x3 in
                                                           let (_, x6) = x4 in
                                                           ((NULL, x6), x5))
                                                    else if (=) x2 '"'
                                                         then Runtime.let_
                                                                (Runtime.let_
                                                                  (Runtime.ocaml_drop
                                                                    x0.state
                                                                    (fun x3 ->
                                                                    ((x2,
                                                                    (let (
                                                                      x4, _) = x
                                                                     in
                                                                     x4)), x3)))
                                                                  (fun x3 ->
                                                                  let (
                                                                    x4, x5) = x3
                                                                  in
                                                                  let (
                                                                    _, x6) = x4
                                                                  in
                                                                  let rec ffix x7 x8 x9 =
                                                                    Runtime.ocaml_peek
                                                                      x9
                                                                      (fun x10 ->
                                                                      match x10 with
                                                                      | Some x11 ->
                                                                      if 
                                                                      (=) x11
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x9
                                                                      (fun x12 ->
                                                                      (((),
                                                                      x8),
                                                                      x12)))
                                                                      (fun x12 ->
                                                                      let (
                                                                      x13, x14) =
                                                                      x12
                                                                      in
                                                                      let (
                                                                      _, x15) =
                                                                      x13
                                                                      in
                                                                      x7 [] x15
                                                                      x14)
                                                                      else 
                                                                      if 
                                                                      (=) x11
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x9
                                                                      (fun x12 ->
                                                                      (((),
                                                                      x8),
                                                                      x12)))
                                                                      (fun x12 ->
                                                                      let (
                                                                      x13, x14) =
                                                                      x12
                                                                      in
                                                                      let (
                                                                      _, x15) =
                                                                      x13
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x14
                                                                      (fun x16 ->
                                                                      ffix x7
                                                                      x15 x16))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x9
                                                                      (fun x12 ->
                                                                      ((x11,
                                                                      x8),
                                                                      x12)))
                                                                      (fun x12 ->
                                                                      let (
                                                                      x13, x14) =
                                                                      x12
                                                                      in
                                                                      let (
                                                                      x15, x16) =
                                                                      x13
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix
                                                                      (fun x17 x18 x19 ->
                                                                      ((x17,
                                                                      x18),
                                                                      x19)) x16
                                                                      x14)
                                                                      (fun x17 ->
                                                                      let (
                                                                      x18, x19) =
                                                                      x17
                                                                      in
                                                                      let (
                                                                      x20, x21) =
                                                                      x18
                                                                      in
                                                                      (((x15,
                                                                      x20),
                                                                      x21), x19))))
                                                                      (fun x12 ->
                                                                      let (
                                                                      x13, x14) =
                                                                      x12
                                                                      in
                                                                      let (
                                                                      x15, x16) =
                                                                      x13
                                                                      in
                                                                      x7
                                                                      ((
                                                                      let (
                                                                      x17, _) =
                                                                      x15
                                                                      in
                                                                      x17) :: 
                                                                      (
                                                                      let (
                                                                      _, x17) =
                                                                      x15
                                                                      in
                                                                      x17)) x16
                                                                      x14)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                  in ffix
                                                                      (fun x7 x8 x9 ->
                                                                      ((x7,
                                                                      x8), x9))
                                                                      x6 x5))
                                                                (fun x3 ->
                                                                let (x4, x5) =
                                                                  x3
                                                                in
                                                                let (x6, x7) =
                                                                  x4
                                                                in
                                                                (((STRING x6),
                                                                x7), x5))
                                                         else Runtime.let_
                                                                (Runtime.let_
                                                                  (Runtime.let_
                                                                    (if 
                                                                      (&&)
                                                                      ((>=) x2
                                                                      '0')
                                                                      ((<=) x2
                                                                      '9')
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x0.state
                                                                      (fun x3 ->
                                                                      ((x2,
                                                                      (
                                                                      let (
                                                                      x4, _) = x
                                                                      in
                                                                      x4)), x3))
                                                                     else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                    (fun x3 ->
                                                                    let (
                                                                      x4, x5) =
                                                                      x3
                                                                    in
                                                                    let (
                                                                      x6, x7) =
                                                                      x4
                                                                    in
                                                                    Runtime.let_
                                                                      (
                                                                      let rec ffix x8 x9 x10 =

                                                                      Runtime.ocaml_peek
                                                                      x10
                                                                      (fun x11 ->
                                                                      match x11 with
                                                                      | Some x12 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x12
                                                                      '0')
                                                                      ((<=) x12
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x10
                                                                      (fun x13 ->
                                                                      ((x12,
                                                                      x9),
                                                                      x13)))
                                                                      (fun x13 ->
                                                                      let (
                                                                      x14, x15) =
                                                                      x13
                                                                      in
                                                                      let (
                                                                      x16, x17) =
                                                                      x14
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix
                                                                      (fun x18 x19 x20 ->
                                                                      ((x18,
                                                                      x19),
                                                                      x20)) x17
                                                                      x15)
                                                                      (fun x18 ->
                                                                      let (
                                                                      x19, x20) =
                                                                      x18
                                                                      in
                                                                      let (
                                                                      x21, x22) =
                                                                      x19
                                                                      in
                                                                      x8
                                                                      (x16 :: x21)
                                                                      x22 x20))
                                                                      else 
                                                                      x8 [] x9
                                                                      x10
                                                                      | None ->
                                                                      x8 [] x9
                                                                      x10)
                                                                      in 
                                                                      ffix
                                                                      (fun x8 x9 x10 ->
                                                                      ((x8,
                                                                      x9),
                                                                      x10)) x7
                                                                      x5)
                                                                      (fun x8 ->
                                                                      let (
                                                                      x9, x10) =
                                                                      x8
                                                                      in
                                                                      let (
                                                                      x11, x12) =
                                                                      x9
                                                                      in
                                                                      (((x6,
                                                                      x11),
                                                                      x12), x10))))
                                                                  (fun x3 ->
                                                                  let (
                                                                    x4, x5) = x3
                                                                  in
                                                                  let (
                                                                    x6, x7) = x4
                                                                  in
                                                                  ((((let (
                                                                      x8, _) =
                                                                      x6
                                                                      in
                                                                      x8) :: 
                                                                  (let (
                                                                     _, x8) = x6
                                                                   in
                                                                   x8)), x7),
                                                                  x5)))
                                                                (fun x3 ->
                                                                let (x4, x5) =
                                                                  x3
                                                                in
                                                                let (x6, x7) =
                                                                  x4
                                                                in
                                                                (((NUMBER x6),
                                                                x7), x5))
          | None ->
            Runtime.failwith_
              ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
        (fun x1 ->
        let (x2, x3) = x1 in
        let (x4, x5) = x2 in
        Runtime.let_
          (let rec ffix x6 x7 x8 =
             Runtime.ocaml_peek x8 (fun x9 ->
               match x9 with
               | Some x10 ->
                 if (||) ((&&) ((>=) x10 '\t') ((<=) x10 '\r')) ((=) x10 ' ')
                 then Runtime.let_
                        (Runtime.ocaml_drop x8 (fun x11 -> (((), x7), x11)))
                        (fun x11 ->
                        let (x12, x13) = x11 in
                        let (_, x14) = x12 in ffix x6 x14 x13)
                 else x6 () x7 x8
               | None -> x6 () x7 x8)
           in ffix (fun x6 x7 x8 -> ((x6, x7), x8)) x5 x3) (fun x6 ->
          let (x7, x8) = x6 in let (x9, x10) = x7 in (((x4, x9), x10), x8))))
      (fun x1 ->
      let (x2, x3) = x1 in
      let (x4, x5) = x2 in
      Runtime.let_
        (let rec ffix x6 x7 x8 = match x8 with
         | (x9, _) ->
           let (x10, _) = x9 in
           (match x10 with
            | Some x11 ->
              (match x11 with
               | RCURL -> x6 [] x7 x8
               | RSQR -> x6 [] x7 x8
               | COMMA -> x6 [] x7 x8
               | COL -> x6 [] x7 x8
               | _ ->
                 Runtime.let_
                   (let rec ffix0 x12 x13 x14 = match x14 with
                    | (x15, _) ->
                      let (x16, _) = x15 in
                      (match x16 with
                       | Some x17 ->
                         (match x17 with
                          | STRING _ ->
                            (match x17 with
                             | TRUE ->
                               let (x18, x19) = x14 in
                               let (_, x20) = x18 in
                               Runtime.ocaml_peek x20 (fun x21 ->
                                 match x21 with
                                 | Some _ ->
                                   Runtime.let_
                                     (Runtime.let_
                                       (Runtime.ocaml_peek x20 (fun x22 ->
                                         match x22 with
                                         | Some x23 ->
                                           if (=) x23 '{'
                                           then Runtime.ocaml_drop x20
                                                  (fun x24 -> ((LCURL, x5),
                                                  x24))
                                           else if (=) x23 '}'
                                                then Runtime.ocaml_drop x20
                                                       (fun x24 -> ((RCURL,
                                                       x5), x24))
                                                else if (=) x23 '['
                                                     then Runtime.ocaml_drop
                                                            x20 (fun x24 ->
                                                            ((LSQR, x5), x24))
                                                     else if (=) x23 ']'
                                                          then Runtime.ocaml_drop
                                                                 x20
                                                                 (fun x24 ->
                                                                 ((RSQR, x5),
                                                                 x24))
                                                          else if (=) x23 ','
                                                               then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5), x24))
                                                               else if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5), x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43), x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42), x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28), x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5), x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33), x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28), x26))
                                         | None ->
                                           Runtime.failwith_
                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                       (fun x22 ->
                                       let (x23, x24) = x22 in
                                       let (x25, x26) = x23 in
                                       Runtime.let_
                                         (let rec ffix1 x27 x28 x29 =
                                            Runtime.ocaml_peek x29 (fun x30 ->
                                              match x30 with
                                              | Some x31 ->
                                                if (||)
                                                     ((&&) ((>=) x31 '\t')
                                                       ((<=) x31 '\r'))
                                                     ((=) x31 ' ')
                                                then Runtime.let_
                                                       (Runtime.ocaml_drop x29
                                                         (fun x32 -> (((),
                                                         x28), x32)))
                                                       (fun x32 ->
                                                       let (x33, x34) = x32 in
                                                       let (_, x35) = x33 in
                                                       ffix1 x27 x35 x34)
                                                else x27 () x28 x29
                                              | None -> x27 () x28 x29)
                                          in ffix1 (fun x27 x28 x29 -> ((x27,
                                               x28), x29)) x26 x24) (fun x27 ->
                                         let (x28, x29) = x27 in
                                         let (x30, x31) = x28 in
                                         (((x25, x30), x31), x29))))
                                     (fun x22 ->
                                     let (x23, x24) = x22 in
                                     let (x25, x26) = x23 in
                                     x12 (Stdlib.succ 0) x13 (((Some
                                       (let (x27, _) = x25 in x27)), x24), x26))
                                 | None ->
                                   x12 (Stdlib.succ 0) x13 ((None, x20),
                                     x19))
                             | _ ->
                               (match x17 with
                                | FALSE ->
                                  let (x18, x19) = x14 in
                                  let (_, x20) = x18 in
                                  Runtime.ocaml_peek x20 (fun x21 ->
                                    match x21 with
                                    | Some _ ->
                                      Runtime.let_
                                        (Runtime.let_
                                          (Runtime.ocaml_peek x20 (fun x22 ->
                                            match x22 with
                                            | Some x23 ->
                                              if (=) x23 '{'
                                              then Runtime.ocaml_drop x20
                                                     (fun x24 -> ((LCURL, x5),
                                                     x24))
                                              else if (=) x23 '}'
                                                   then Runtime.ocaml_drop x20
                                                          (fun x24 -> ((RCURL,
                                                          x5), x24))
                                                   else if (=) x23 '['
                                                        then Runtime.ocaml_drop
                                                               x20 (fun x24 ->
                                                               ((LSQR, x5),
                                                               x24))
                                                        else if (=) x23 ']'
                                                             then Runtime.ocaml_drop
                                                                    x20
                                                                    (fun x24 ->
                                                                    ((RSQR,
                                                                    x5), x24))
                                                             else if (=) x23 ','
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5), x24))
                                                                  else 
                                                                    if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5), x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43), x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42), x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28), x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5), x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33), x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28), x26))
                                            | None ->
                                              Runtime.failwith_
                                                ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                          (fun x22 ->
                                          let (x23, x24) = x22 in
                                          let (x25, x26) = x23 in
                                          Runtime.let_
                                            (let rec ffix1 x27 x28 x29 =
                                               Runtime.ocaml_peek x29
                                                 (fun x30 ->
                                                 match x30 with
                                                 | Some x31 ->
                                                   if (||)
                                                        ((&&) ((>=) x31 '\t')
                                                          ((<=) x31 '\r'))
                                                        ((=) x31 ' ')
                                                   then Runtime.let_
                                                          (Runtime.ocaml_drop
                                                            x29 (fun x32 ->
                                                            (((), x28), x32)))
                                                          (fun x32 ->
                                                          let (x33, x34) = x32
                                                          in
                                                          let (_, x35) = x33 in
                                                          ffix1 x27 x35 x34)
                                                   else x27 () x28 x29
                                                 | None -> x27 () x28 x29)
                                             in ffix1 (fun x27 x28 x29 ->
                                                  ((x27, x28), x29)) x26 x24)
                                            (fun x27 ->
                                            let (x28, x29) = x27 in
                                            let (x30, x31) = x28 in
                                            (((x25, x30), x31), x29))))
                                        (fun x22 ->
                                        let (x23, x24) = x22 in
                                        let (x25, x26) = x23 in
                                        x12 (Stdlib.succ 0) x13 (((Some
                                          (let (x27, _) = x25 in x27)), x24),
                                          x26))
                                    | None ->
                                      x12 (Stdlib.succ 0) x13 ((None, x20),
                                        x19))
                                | _ ->
                                  (match x17 with
                                   | NULL ->
                                     let (x18, x19) = x14 in
                                     let (_, x20) = x18 in
                                     Runtime.ocaml_peek x20 (fun x21 ->
                                       match x21 with
                                       | Some _ ->
                                         Runtime.let_
                                           (Runtime.let_
                                             (Runtime.ocaml_peek x20
                                               (fun x22 ->
                                               match x22 with
                                               | Some x23 ->
                                                 if (=) x23 '{'
                                                 then Runtime.ocaml_drop x20
                                                        (fun x24 -> ((LCURL,
                                                        x5), x24))
                                                 else if (=) x23 '}'
                                                      then Runtime.ocaml_drop
                                                             x20 (fun x24 ->
                                                             ((RCURL, x5), x24))
                                                      else if (=) x23 '['
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LSQR, x5),
                                                                  x24))
                                                           else if (=) x23 ']'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5), x24))
                                                                else if 
                                                                      (=) x23
                                                                      ','
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5), x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5), x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43), x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42), x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28), x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5), x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33), x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28), x26))
                                               | None ->
                                                 Runtime.failwith_
                                                   ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                             (fun x22 ->
                                             let (x23, x24) = x22 in
                                             let (x25, x26) = x23 in
                                             Runtime.let_
                                               (let rec ffix1 x27 x28 x29 =
                                                  Runtime.ocaml_peek x29
                                                    (fun x30 ->
                                                    match x30 with
                                                    | Some x31 ->
                                                      if (||)
                                                           ((&&)
                                                             ((>=) x31 '\t')
                                                             ((<=) x31 '\r'))
                                                           ((=) x31 ' ')
                                                      then Runtime.let_
                                                             (Runtime.ocaml_drop
                                                               x29 (fun x32 ->
                                                               (((), x28),
                                                               x32)))
                                                             (fun x32 ->
                                                             let (x33, x34) =
                                                               x32
                                                             in
                                                             let (_, x35) = x33
                                                             in
                                                             ffix1 x27 x35 x34)
                                                      else x27 () x28 x29
                                                    | None -> x27 () x28 x29)
                                                in ffix1 (fun x27 x28 x29 ->
                                                     ((x27, x28), x29)) x26 x24)
                                               (fun x27 ->
                                               let (x28, x29) = x27 in
                                               let (x30, x31) = x28 in
                                               (((x25, x30), x31), x29))))
                                           (fun x22 ->
                                           let (x23, x24) = x22 in
                                           let (x25, x26) = x23 in
                                           x12 (Stdlib.succ 0) x13 (((Some
                                             (let (x27, _) = x25 in x27)),
                                             x24), x26))
                                       | None ->
                                         x12 (Stdlib.succ 0) x13 ((None,
                                           x20), x19))
                                   | _ ->
                                     (match x17 with
                                      | NUMBER _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5), x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5), x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5), x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5), x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5), x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43), x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42), x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28), x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5), x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33), x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28), x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27 in
                                                         let (x30, x31) = x28 in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_num x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)
                                      | _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5), x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5), x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5), x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5), x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5), x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43), x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42), x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28), x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5), x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33), x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28), x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27 in
                                                         let (x30, x31) = x28 in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_string x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)))))
                          | TRUE ->
                            (match x17 with
                             | TRUE ->
                               let (x18, x19) = x14 in
                               let (_, x20) = x18 in
                               Runtime.ocaml_peek x20 (fun x21 ->
                                 match x21 with
                                 | Some _ ->
                                   Runtime.let_
                                     (Runtime.let_
                                       (Runtime.ocaml_peek x20 (fun x22 ->
                                         match x22 with
                                         | Some x23 ->
                                           if (=) x23 '{'
                                           then Runtime.ocaml_drop x20
                                                  (fun x24 -> ((LCURL, x5),
                                                  x24))
                                           else if (=) x23 '}'
                                                then Runtime.ocaml_drop x20
                                                       (fun x24 -> ((RCURL,
                                                       x5), x24))
                                                else if (=) x23 '['
                                                     then Runtime.ocaml_drop
                                                            x20 (fun x24 ->
                                                            ((LSQR, x5), x24))
                                                     else if (=) x23 ']'
                                                          then Runtime.ocaml_drop
                                                                 x20
                                                                 (fun x24 ->
                                                                 ((RSQR, x5),
                                                                 x24))
                                                          else if (=) x23 ','
                                                               then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5), x24))
                                                               else if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5), x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43), x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42), x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28), x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5), x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33), x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28), x26))
                                         | None ->
                                           Runtime.failwith_
                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                       (fun x22 ->
                                       let (x23, x24) = x22 in
                                       let (x25, x26) = x23 in
                                       Runtime.let_
                                         (let rec ffix1 x27 x28 x29 =
                                            Runtime.ocaml_peek x29 (fun x30 ->
                                              match x30 with
                                              | Some x31 ->
                                                if (||)
                                                     ((&&) ((>=) x31 '\t')
                                                       ((<=) x31 '\r'))
                                                     ((=) x31 ' ')
                                                then Runtime.let_
                                                       (Runtime.ocaml_drop x29
                                                         (fun x32 -> (((),
                                                         x28), x32)))
                                                       (fun x32 ->
                                                       let (x33, x34) = x32 in
                                                       let (_, x35) = x33 in
                                                       ffix1 x27 x35 x34)
                                                else x27 () x28 x29
                                              | None -> x27 () x28 x29)
                                          in ffix1 (fun x27 x28 x29 -> ((x27,
                                               x28), x29)) x26 x24) (fun x27 ->
                                         let (x28, x29) = x27 in
                                         let (x30, x31) = x28 in
                                         (((x25, x30), x31), x29))))
                                     (fun x22 ->
                                     let (x23, x24) = x22 in
                                     let (x25, x26) = x23 in
                                     x12 (Stdlib.succ 0) x13 (((Some
                                       (let (x27, _) = x25 in x27)), x24), x26))
                                 | None ->
                                   x12 (Stdlib.succ 0) x13 ((None, x20),
                                     x19))
                             | _ ->
                               (match x17 with
                                | FALSE ->
                                  let (x18, x19) = x14 in
                                  let (_, x20) = x18 in
                                  Runtime.ocaml_peek x20 (fun x21 ->
                                    match x21 with
                                    | Some _ ->
                                      Runtime.let_
                                        (Runtime.let_
                                          (Runtime.ocaml_peek x20 (fun x22 ->
                                            match x22 with
                                            | Some x23 ->
                                              if (=) x23 '{'
                                              then Runtime.ocaml_drop x20
                                                     (fun x24 -> ((LCURL, x5),
                                                     x24))
                                              else if (=) x23 '}'
                                                   then Runtime.ocaml_drop x20
                                                          (fun x24 -> ((RCURL,
                                                          x5), x24))
                                                   else if (=) x23 '['
                                                        then Runtime.ocaml_drop
                                                               x20 (fun x24 ->
                                                               ((LSQR, x5),
                                                               x24))
                                                        else if (=) x23 ']'
                                                             then Runtime.ocaml_drop
                                                                    x20
                                                                    (fun x24 ->
                                                                    ((RSQR,
                                                                    x5), x24))
                                                             else if (=) x23 ','
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5), x24))
                                                                  else 
                                                                    if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5), x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43), x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42), x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28), x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5), x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33), x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28), x26))
                                            | None ->
                                              Runtime.failwith_
                                                ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                          (fun x22 ->
                                          let (x23, x24) = x22 in
                                          let (x25, x26) = x23 in
                                          Runtime.let_
                                            (let rec ffix1 x27 x28 x29 =
                                               Runtime.ocaml_peek x29
                                                 (fun x30 ->
                                                 match x30 with
                                                 | Some x31 ->
                                                   if (||)
                                                        ((&&) ((>=) x31 '\t')
                                                          ((<=) x31 '\r'))
                                                        ((=) x31 ' ')
                                                   then Runtime.let_
                                                          (Runtime.ocaml_drop
                                                            x29 (fun x32 ->
                                                            (((), x28), x32)))
                                                          (fun x32 ->
                                                          let (x33, x34) = x32
                                                          in
                                                          let (_, x35) = x33 in
                                                          ffix1 x27 x35 x34)
                                                   else x27 () x28 x29
                                                 | None -> x27 () x28 x29)
                                             in ffix1 (fun x27 x28 x29 ->
                                                  ((x27, x28), x29)) x26 x24)
                                            (fun x27 ->
                                            let (x28, x29) = x27 in
                                            let (x30, x31) = x28 in
                                            (((x25, x30), x31), x29))))
                                        (fun x22 ->
                                        let (x23, x24) = x22 in
                                        let (x25, x26) = x23 in
                                        x12 (Stdlib.succ 0) x13 (((Some
                                          (let (x27, _) = x25 in x27)), x24),
                                          x26))
                                    | None ->
                                      x12 (Stdlib.succ 0) x13 ((None, x20),
                                        x19))
                                | _ ->
                                  (match x17 with
                                   | NULL ->
                                     let (x18, x19) = x14 in
                                     let (_, x20) = x18 in
                                     Runtime.ocaml_peek x20 (fun x21 ->
                                       match x21 with
                                       | Some _ ->
                                         Runtime.let_
                                           (Runtime.let_
                                             (Runtime.ocaml_peek x20
                                               (fun x22 ->
                                               match x22 with
                                               | Some x23 ->
                                                 if (=) x23 '{'
                                                 then Runtime.ocaml_drop x20
                                                        (fun x24 -> ((LCURL,
                                                        x5), x24))
                                                 else if (=) x23 '}'
                                                      then Runtime.ocaml_drop
                                                             x20 (fun x24 ->
                                                             ((RCURL, x5), x24))
                                                      else if (=) x23 '['
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LSQR, x5),
                                                                  x24))
                                                           else if (=) x23 ']'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5), x24))
                                                                else if 
                                                                      (=) x23
                                                                      ','
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5), x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5), x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27), x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27), x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31), x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35), x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39), x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                               | None ->
                                                 Runtime.failwith_
                                                   ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                             (fun x22 ->
                                             let (x23, x24) = x22 in
                                             let (x25, x26) = x23 in
                                             Runtime.let_
                                               (let rec ffix1 x27 x28 x29 =
                                                  Runtime.ocaml_peek x29
                                                    (fun x30 ->
                                                    match x30 with
                                                    | Some x31 ->
                                                      if (||)
                                                           ((&&)
                                                             ((>=) x31 '\t')
                                                             ((<=) x31 '\r'))
                                                           ((=) x31 ' ')
                                                      then Runtime.let_
                                                             (Runtime.ocaml_drop
                                                               x29 (fun x32 ->
                                                               (((), x28),
                                                               x32)))
                                                             (fun x32 ->
                                                             let (x33, x34) =
                                                               x32
                                                             in
                                                             let (_, x35) = x33
                                                             in
                                                             ffix1 x27 x35 x34)
                                                      else x27 () x28 x29
                                                    | None -> x27 () x28 x29)
                                                in ffix1 (fun x27 x28 x29 ->
                                                     ((x27, x28), x29)) x26 x24)
                                               (fun x27 ->
                                               let (x28, x29) = x27 in
                                               let (x30, x31) = x28 in
                                               (((x25, x30), x31), x29))))
                                           (fun x22 ->
                                           let (x23, x24) = x22 in
                                           let (x25, x26) = x23 in
                                           x12 (Stdlib.succ 0) x13 (((Some
                                             (let (x27, _) = x25 in x27)),
                                             x24), x26))
                                       | None ->
                                         x12 (Stdlib.succ 0) x13 ((None,
                                           x20), x19))
                                   | _ ->
                                     (match x17 with
                                      | NUMBER _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27
                                                         in
                                                         let (x30, x31) = x28
                                                         in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_num x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)
                                      | _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27
                                                         in
                                                         let (x30, x31) = x28
                                                         in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_string x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)))))
                          | FALSE ->
                            (match x17 with
                             | TRUE ->
                               let (x18, x19) = x14 in
                               let (_, x20) = x18 in
                               Runtime.ocaml_peek x20 (fun x21 ->
                                 match x21 with
                                 | Some _ ->
                                   Runtime.let_
                                     (Runtime.let_
                                       (Runtime.ocaml_peek x20 (fun x22 ->
                                         match x22 with
                                         | Some x23 ->
                                           if (=) x23 '{'
                                           then Runtime.ocaml_drop x20
                                                  (fun x24 -> ((LCURL, x5),
                                                  x24))
                                           else if (=) x23 '}'
                                                then Runtime.ocaml_drop x20
                                                       (fun x24 -> ((RCURL,
                                                       x5), x24))
                                                else if (=) x23 '['
                                                     then Runtime.ocaml_drop
                                                            x20 (fun x24 ->
                                                            ((LSQR, x5), x24))
                                                     else if (=) x23 ']'
                                                          then Runtime.ocaml_drop
                                                                 x20
                                                                 (fun x24 ->
                                                                 ((RSQR, x5),
                                                                 x24))
                                                          else if (=) x23 ','
                                                               then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                               else if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                         | None ->
                                           Runtime.failwith_
                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                       (fun x22 ->
                                       let (x23, x24) = x22 in
                                       let (x25, x26) = x23 in
                                       Runtime.let_
                                         (let rec ffix1 x27 x28 x29 =
                                            Runtime.ocaml_peek x29 (fun x30 ->
                                              match x30 with
                                              | Some x31 ->
                                                if (||)
                                                     ((&&) ((>=) x31 '\t')
                                                       ((<=) x31 '\r'))
                                                     ((=) x31 ' ')
                                                then Runtime.let_
                                                       (Runtime.ocaml_drop x29
                                                         (fun x32 -> (((),
                                                         x28), x32)))
                                                       (fun x32 ->
                                                       let (x33, x34) = x32 in
                                                       let (_, x35) = x33 in
                                                       ffix1 x27 x35 x34)
                                                else x27 () x28 x29
                                              | None -> x27 () x28 x29)
                                          in ffix1 (fun x27 x28 x29 -> ((x27,
                                               x28), x29)) x26 x24) (fun x27 ->
                                         let (x28, x29) = x27 in
                                         let (x30, x31) = x28 in
                                         (((x25, x30), x31), x29))))
                                     (fun x22 ->
                                     let (x23, x24) = x22 in
                                     let (x25, x26) = x23 in
                                     x12 (Stdlib.succ 0) x13 (((Some
                                       (let (x27, _) = x25 in x27)), x24), x26))
                                 | None ->
                                   x12 (Stdlib.succ 0) x13 ((None, x20),
                                     x19))
                             | _ ->
                               (match x17 with
                                | FALSE ->
                                  let (x18, x19) = x14 in
                                  let (_, x20) = x18 in
                                  Runtime.ocaml_peek x20 (fun x21 ->
                                    match x21 with
                                    | Some _ ->
                                      Runtime.let_
                                        (Runtime.let_
                                          (Runtime.ocaml_peek x20 (fun x22 ->
                                            match x22 with
                                            | Some x23 ->
                                              if (=) x23 '{'
                                              then Runtime.ocaml_drop x20
                                                     (fun x24 -> ((LCURL, x5),
                                                     x24))
                                              else if (=) x23 '}'
                                                   then Runtime.ocaml_drop x20
                                                          (fun x24 -> ((RCURL,
                                                          x5), x24))
                                                   else if (=) x23 '['
                                                        then Runtime.ocaml_drop
                                                               x20 (fun x24 ->
                                                               ((LSQR, x5),
                                                               x24))
                                                        else if (=) x23 ']'
                                                             then Runtime.ocaml_drop
                                                                    x20
                                                                    (fun x24 ->
                                                                    ((RSQR,
                                                                    x5), x24))
                                                             else if (=) x23
                                                                      ','
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                  else 
                                                                    if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                            | None ->
                                              Runtime.failwith_
                                                ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                          (fun x22 ->
                                          let (x23, x24) = x22 in
                                          let (x25, x26) = x23 in
                                          Runtime.let_
                                            (let rec ffix1 x27 x28 x29 =
                                               Runtime.ocaml_peek x29
                                                 (fun x30 ->
                                                 match x30 with
                                                 | Some x31 ->
                                                   if (||)
                                                        ((&&) ((>=) x31 '\t')
                                                          ((<=) x31 '\r'))
                                                        ((=) x31 ' ')
                                                   then Runtime.let_
                                                          (Runtime.ocaml_drop
                                                            x29 (fun x32 ->
                                                            (((), x28), x32)))
                                                          (fun x32 ->
                                                          let (x33, x34) = x32
                                                          in
                                                          let (_, x35) = x33 in
                                                          ffix1 x27 x35 x34)
                                                   else x27 () x28 x29
                                                 | None -> x27 () x28 x29)
                                             in ffix1 (fun x27 x28 x29 ->
                                                  ((x27, x28), x29)) x26 x24)
                                            (fun x27 ->
                                            let (x28, x29) = x27 in
                                            let (x30, x31) = x28 in
                                            (((x25, x30), x31), x29))))
                                        (fun x22 ->
                                        let (x23, x24) = x22 in
                                        let (x25, x26) = x23 in
                                        x12 (Stdlib.succ 0) x13 (((Some
                                          (let (x27, _) = x25 in x27)), x24),
                                          x26))
                                    | None ->
                                      x12 (Stdlib.succ 0) x13 ((None, x20),
                                        x19))
                                | _ ->
                                  (match x17 with
                                   | NULL ->
                                     let (x18, x19) = x14 in
                                     let (_, x20) = x18 in
                                     Runtime.ocaml_peek x20 (fun x21 ->
                                       match x21 with
                                       | Some _ ->
                                         Runtime.let_
                                           (Runtime.let_
                                             (Runtime.ocaml_peek x20
                                               (fun x22 ->
                                               match x22 with
                                               | Some x23 ->
                                                 if (=) x23 '{'
                                                 then Runtime.ocaml_drop x20
                                                        (fun x24 -> ((LCURL,
                                                        x5), x24))
                                                 else if (=) x23 '}'
                                                      then Runtime.ocaml_drop
                                                             x20 (fun x24 ->
                                                             ((RCURL, x5),
                                                             x24))
                                                      else if (=) x23 '['
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LSQR, x5),
                                                                  x24))
                                                           else if (=) x23 ']'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      ','
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                               | None ->
                                                 Runtime.failwith_
                                                   ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                             (fun x22 ->
                                             let (x23, x24) = x22 in
                                             let (x25, x26) = x23 in
                                             Runtime.let_
                                               (let rec ffix1 x27 x28 x29 =
                                                  Runtime.ocaml_peek x29
                                                    (fun x30 ->
                                                    match x30 with
                                                    | Some x31 ->
                                                      if (||)
                                                           ((&&)
                                                             ((>=) x31 '\t')
                                                             ((<=) x31 '\r'))
                                                           ((=) x31 ' ')
                                                      then Runtime.let_
                                                             (Runtime.ocaml_drop
                                                               x29 (fun x32 ->
                                                               (((), x28),
                                                               x32)))
                                                             (fun x32 ->
                                                             let (x33, x34) =
                                                               x32
                                                             in
                                                             let (_, x35) = x33
                                                             in
                                                             ffix1 x27 x35 x34)
                                                      else x27 () x28 x29
                                                    | None -> x27 () x28 x29)
                                                in ffix1 (fun x27 x28 x29 ->
                                                     ((x27, x28), x29)) x26 x24)
                                               (fun x27 ->
                                               let (x28, x29) = x27 in
                                               let (x30, x31) = x28 in
                                               (((x25, x30), x31), x29))))
                                           (fun x22 ->
                                           let (x23, x24) = x22 in
                                           let (x25, x26) = x23 in
                                           x12 (Stdlib.succ 0) x13 (((Some
                                             (let (x27, _) = x25 in x27)),
                                             x24), x26))
                                       | None ->
                                         x12 (Stdlib.succ 0) x13 ((None,
                                           x20), x19))
                                   | _ ->
                                     (match x17 with
                                      | NUMBER _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27
                                                         in
                                                         let (x30, x31) = x28
                                                         in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_num x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)
                                      | _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27
                                                         in
                                                         let (x30, x31) = x28
                                                         in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_string x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)))))
                          | NULL ->
                            (match x17 with
                             | TRUE ->
                               let (x18, x19) = x14 in
                               let (_, x20) = x18 in
                               Runtime.ocaml_peek x20 (fun x21 ->
                                 match x21 with
                                 | Some _ ->
                                   Runtime.let_
                                     (Runtime.let_
                                       (Runtime.ocaml_peek x20 (fun x22 ->
                                         match x22 with
                                         | Some x23 ->
                                           if (=) x23 '{'
                                           then Runtime.ocaml_drop x20
                                                  (fun x24 -> ((LCURL, x5),
                                                  x24))
                                           else if (=) x23 '}'
                                                then Runtime.ocaml_drop x20
                                                       (fun x24 -> ((RCURL,
                                                       x5), x24))
                                                else if (=) x23 '['
                                                     then Runtime.ocaml_drop
                                                            x20 (fun x24 ->
                                                            ((LSQR, x5), x24))
                                                     else if (=) x23 ']'
                                                          then Runtime.ocaml_drop
                                                                 x20
                                                                 (fun x24 ->
                                                                 ((RSQR, x5),
                                                                 x24))
                                                          else if (=) x23 ','
                                                               then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                               else if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                         | None ->
                                           Runtime.failwith_
                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                       (fun x22 ->
                                       let (x23, x24) = x22 in
                                       let (x25, x26) = x23 in
                                       Runtime.let_
                                         (let rec ffix1 x27 x28 x29 =
                                            Runtime.ocaml_peek x29 (fun x30 ->
                                              match x30 with
                                              | Some x31 ->
                                                if (||)
                                                     ((&&) ((>=) x31 '\t')
                                                       ((<=) x31 '\r'))
                                                     ((=) x31 ' ')
                                                then Runtime.let_
                                                       (Runtime.ocaml_drop x29
                                                         (fun x32 -> (((),
                                                         x28), x32)))
                                                       (fun x32 ->
                                                       let (x33, x34) = x32 in
                                                       let (_, x35) = x33 in
                                                       ffix1 x27 x35 x34)
                                                else x27 () x28 x29
                                              | None -> x27 () x28 x29)
                                          in ffix1 (fun x27 x28 x29 -> ((x27,
                                               x28), x29)) x26 x24) (fun x27 ->
                                         let (x28, x29) = x27 in
                                         let (x30, x31) = x28 in
                                         (((x25, x30), x31), x29))))
                                     (fun x22 ->
                                     let (x23, x24) = x22 in
                                     let (x25, x26) = x23 in
                                     x12 (Stdlib.succ 0) x13 (((Some
                                       (let (x27, _) = x25 in x27)), x24), x26))
                                 | None ->
                                   x12 (Stdlib.succ 0) x13 ((None, x20),
                                     x19))
                             | _ ->
                               (match x17 with
                                | FALSE ->
                                  let (x18, x19) = x14 in
                                  let (_, x20) = x18 in
                                  Runtime.ocaml_peek x20 (fun x21 ->
                                    match x21 with
                                    | Some _ ->
                                      Runtime.let_
                                        (Runtime.let_
                                          (Runtime.ocaml_peek x20 (fun x22 ->
                                            match x22 with
                                            | Some x23 ->
                                              if (=) x23 '{'
                                              then Runtime.ocaml_drop x20
                                                     (fun x24 -> ((LCURL, x5),
                                                     x24))
                                              else if (=) x23 '}'
                                                   then Runtime.ocaml_drop x20
                                                          (fun x24 -> ((RCURL,
                                                          x5), x24))
                                                   else if (=) x23 '['
                                                        then Runtime.ocaml_drop
                                                               x20 (fun x24 ->
                                                               ((LSQR, x5),
                                                               x24))
                                                        else if (=) x23 ']'
                                                             then Runtime.ocaml_drop
                                                                    x20
                                                                    (fun x24 ->
                                                                    ((RSQR,
                                                                    x5), x24))
                                                             else if (=) x23
                                                                      ','
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                  else 
                                                                    if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                            | None ->
                                              Runtime.failwith_
                                                ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                          (fun x22 ->
                                          let (x23, x24) = x22 in
                                          let (x25, x26) = x23 in
                                          Runtime.let_
                                            (let rec ffix1 x27 x28 x29 =
                                               Runtime.ocaml_peek x29
                                                 (fun x30 ->
                                                 match x30 with
                                                 | Some x31 ->
                                                   if (||)
                                                        ((&&) ((>=) x31 '\t')
                                                          ((<=) x31 '\r'))
                                                        ((=) x31 ' ')
                                                   then Runtime.let_
                                                          (Runtime.ocaml_drop
                                                            x29 (fun x32 ->
                                                            (((), x28), x32)))
                                                          (fun x32 ->
                                                          let (x33, x34) = x32
                                                          in
                                                          let (_, x35) = x33 in
                                                          ffix1 x27 x35 x34)
                                                   else x27 () x28 x29
                                                 | None -> x27 () x28 x29)
                                             in ffix1 (fun x27 x28 x29 ->
                                                  ((x27, x28), x29)) x26 x24)
                                            (fun x27 ->
                                            let (x28, x29) = x27 in
                                            let (x30, x31) = x28 in
                                            (((x25, x30), x31), x29))))
                                        (fun x22 ->
                                        let (x23, x24) = x22 in
                                        let (x25, x26) = x23 in
                                        x12 (Stdlib.succ 0) x13 (((Some
                                          (let (x27, _) = x25 in x27)), x24),
                                          x26))
                                    | None ->
                                      x12 (Stdlib.succ 0) x13 ((None, x20),
                                        x19))
                                | _ ->
                                  (match x17 with
                                   | NULL ->
                                     let (x18, x19) = x14 in
                                     let (_, x20) = x18 in
                                     Runtime.ocaml_peek x20 (fun x21 ->
                                       match x21 with
                                       | Some _ ->
                                         Runtime.let_
                                           (Runtime.let_
                                             (Runtime.ocaml_peek x20
                                               (fun x22 ->
                                               match x22 with
                                               | Some x23 ->
                                                 if (=) x23 '{'
                                                 then Runtime.ocaml_drop x20
                                                        (fun x24 -> ((LCURL,
                                                        x5), x24))
                                                 else if (=) x23 '}'
                                                      then Runtime.ocaml_drop
                                                             x20 (fun x24 ->
                                                             ((RCURL, x5),
                                                             x24))
                                                      else if (=) x23 '['
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LSQR, x5),
                                                                  x24))
                                                           else if (=) x23 ']'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      ','
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                               | None ->
                                                 Runtime.failwith_
                                                   ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                             (fun x22 ->
                                             let (x23, x24) = x22 in
                                             let (x25, x26) = x23 in
                                             Runtime.let_
                                               (let rec ffix1 x27 x28 x29 =
                                                  Runtime.ocaml_peek x29
                                                    (fun x30 ->
                                                    match x30 with
                                                    | Some x31 ->
                                                      if (||)
                                                           ((&&)
                                                             ((>=) x31 '\t')
                                                             ((<=) x31 '\r'))
                                                           ((=) x31 ' ')
                                                      then Runtime.let_
                                                             (Runtime.ocaml_drop
                                                               x29 (fun x32 ->
                                                               (((), x28),
                                                               x32)))
                                                             (fun x32 ->
                                                             let (x33, x34) =
                                                               x32
                                                             in
                                                             let (_, x35) = x33
                                                             in
                                                             ffix1 x27 x35 x34)
                                                      else x27 () x28 x29
                                                    | None -> x27 () x28 x29)
                                                in ffix1 (fun x27 x28 x29 ->
                                                     ((x27, x28), x29)) x26 x24)
                                               (fun x27 ->
                                               let (x28, x29) = x27 in
                                               let (x30, x31) = x28 in
                                               (((x25, x30), x31), x29))))
                                           (fun x22 ->
                                           let (x23, x24) = x22 in
                                           let (x25, x26) = x23 in
                                           x12 (Stdlib.succ 0) x13 (((Some
                                             (let (x27, _) = x25 in x27)),
                                             x24), x26))
                                       | None ->
                                         x12 (Stdlib.succ 0) x13 ((None,
                                           x20), x19))
                                   | _ ->
                                     (match x17 with
                                      | NUMBER _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27
                                                         in
                                                         let (x30, x31) = x28
                                                         in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_num x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)
                                      | _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27
                                                         in
                                                         let (x30, x31) = x28
                                                         in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_string x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)))))
                          | NUMBER _ ->
                            (match x17 with
                             | TRUE ->
                               let (x18, x19) = x14 in
                               let (_, x20) = x18 in
                               Runtime.ocaml_peek x20 (fun x21 ->
                                 match x21 with
                                 | Some _ ->
                                   Runtime.let_
                                     (Runtime.let_
                                       (Runtime.ocaml_peek x20 (fun x22 ->
                                         match x22 with
                                         | Some x23 ->
                                           if (=) x23 '{'
                                           then Runtime.ocaml_drop x20
                                                  (fun x24 -> ((LCURL, x5),
                                                  x24))
                                           else if (=) x23 '}'
                                                then Runtime.ocaml_drop x20
                                                       (fun x24 -> ((RCURL,
                                                       x5), x24))
                                                else if (=) x23 '['
                                                     then Runtime.ocaml_drop
                                                            x20 (fun x24 ->
                                                            ((LSQR, x5), x24))
                                                     else if (=) x23 ']'
                                                          then Runtime.ocaml_drop
                                                                 x20
                                                                 (fun x24 ->
                                                                 ((RSQR, x5),
                                                                 x24))
                                                          else if (=) x23 ','
                                                               then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                               else if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                         | None ->
                                           Runtime.failwith_
                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                       (fun x22 ->
                                       let (x23, x24) = x22 in
                                       let (x25, x26) = x23 in
                                       Runtime.let_
                                         (let rec ffix1 x27 x28 x29 =
                                            Runtime.ocaml_peek x29 (fun x30 ->
                                              match x30 with
                                              | Some x31 ->
                                                if (||)
                                                     ((&&) ((>=) x31 '\t')
                                                       ((<=) x31 '\r'))
                                                     ((=) x31 ' ')
                                                then Runtime.let_
                                                       (Runtime.ocaml_drop x29
                                                         (fun x32 -> (((),
                                                         x28), x32)))
                                                       (fun x32 ->
                                                       let (x33, x34) = x32 in
                                                       let (_, x35) = x33 in
                                                       ffix1 x27 x35 x34)
                                                else x27 () x28 x29
                                              | None -> x27 () x28 x29)
                                          in ffix1 (fun x27 x28 x29 -> ((x27,
                                               x28), x29)) x26 x24) (fun x27 ->
                                         let (x28, x29) = x27 in
                                         let (x30, x31) = x28 in
                                         (((x25, x30), x31), x29))))
                                     (fun x22 ->
                                     let (x23, x24) = x22 in
                                     let (x25, x26) = x23 in
                                     x12 (Stdlib.succ 0) x13 (((Some
                                       (let (x27, _) = x25 in x27)), x24), x26))
                                 | None ->
                                   x12 (Stdlib.succ 0) x13 ((None, x20),
                                     x19))
                             | _ ->
                               (match x17 with
                                | FALSE ->
                                  let (x18, x19) = x14 in
                                  let (_, x20) = x18 in
                                  Runtime.ocaml_peek x20 (fun x21 ->
                                    match x21 with
                                    | Some _ ->
                                      Runtime.let_
                                        (Runtime.let_
                                          (Runtime.ocaml_peek x20 (fun x22 ->
                                            match x22 with
                                            | Some x23 ->
                                              if (=) x23 '{'
                                              then Runtime.ocaml_drop x20
                                                     (fun x24 -> ((LCURL, x5),
                                                     x24))
                                              else if (=) x23 '}'
                                                   then Runtime.ocaml_drop x20
                                                          (fun x24 -> ((RCURL,
                                                          x5), x24))
                                                   else if (=) x23 '['
                                                        then Runtime.ocaml_drop
                                                               x20 (fun x24 ->
                                                               ((LSQR, x5),
                                                               x24))
                                                        else if (=) x23 ']'
                                                             then Runtime.ocaml_drop
                                                                    x20
                                                                    (fun x24 ->
                                                                    ((RSQR,
                                                                    x5), x24))
                                                             else if (=) x23
                                                                      ','
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                  else 
                                                                    if 
                                                                      (=) x23
                                                                      ':'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                            | None ->
                                              Runtime.failwith_
                                                ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                          (fun x22 ->
                                          let (x23, x24) = x22 in
                                          let (x25, x26) = x23 in
                                          Runtime.let_
                                            (let rec ffix1 x27 x28 x29 =
                                               Runtime.ocaml_peek x29
                                                 (fun x30 ->
                                                 match x30 with
                                                 | Some x31 ->
                                                   if (||)
                                                        ((&&) ((>=) x31 '\t')
                                                          ((<=) x31 '\r'))
                                                        ((=) x31 ' ')
                                                   then Runtime.let_
                                                          (Runtime.ocaml_drop
                                                            x29 (fun x32 ->
                                                            (((), x28), x32)))
                                                          (fun x32 ->
                                                          let (x33, x34) = x32
                                                          in
                                                          let (_, x35) = x33 in
                                                          ffix1 x27 x35 x34)
                                                   else x27 () x28 x29
                                                 | None -> x27 () x28 x29)
                                             in ffix1 (fun x27 x28 x29 ->
                                                  ((x27, x28), x29)) x26 x24)
                                            (fun x27 ->
                                            let (x28, x29) = x27 in
                                            let (x30, x31) = x28 in
                                            (((x25, x30), x31), x29))))
                                        (fun x22 ->
                                        let (x23, x24) = x22 in
                                        let (x25, x26) = x23 in
                                        x12 (Stdlib.succ 0) x13 (((Some
                                          (let (x27, _) = x25 in x27)), x24),
                                          x26))
                                    | None ->
                                      x12 (Stdlib.succ 0) x13 ((None, x20),
                                        x19))
                                | _ ->
                                  (match x17 with
                                   | NULL ->
                                     let (x18, x19) = x14 in
                                     let (_, x20) = x18 in
                                     Runtime.ocaml_peek x20 (fun x21 ->
                                       match x21 with
                                       | Some _ ->
                                         Runtime.let_
                                           (Runtime.let_
                                             (Runtime.ocaml_peek x20
                                               (fun x22 ->
                                               match x22 with
                                               | Some x23 ->
                                                 if (=) x23 '{'
                                                 then Runtime.ocaml_drop x20
                                                        (fun x24 -> ((LCURL,
                                                        x5), x24))
                                                 else if (=) x23 '}'
                                                      then Runtime.ocaml_drop
                                                             x20 (fun x24 ->
                                                             ((RCURL, x5),
                                                             x24))
                                                      else if (=) x23 '['
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LSQR, x5),
                                                                  x24))
                                                           else if (=) x23 ']'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      ','
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                               | None ->
                                                 Runtime.failwith_
                                                   ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                             (fun x22 ->
                                             let (x23, x24) = x22 in
                                             let (x25, x26) = x23 in
                                             Runtime.let_
                                               (let rec ffix1 x27 x28 x29 =
                                                  Runtime.ocaml_peek x29
                                                    (fun x30 ->
                                                    match x30 with
                                                    | Some x31 ->
                                                      if (||)
                                                           ((&&)
                                                             ((>=) x31 '\t')
                                                             ((<=) x31 '\r'))
                                                           ((=) x31 ' ')
                                                      then Runtime.let_
                                                             (Runtime.ocaml_drop
                                                               x29 (fun x32 ->
                                                               (((), x28),
                                                               x32)))
                                                             (fun x32 ->
                                                             let (x33, x34) =
                                                               x32
                                                             in
                                                             let (_, x35) = x33
                                                             in
                                                             ffix1 x27 x35 x34)
                                                      else x27 () x28 x29
                                                    | None -> x27 () x28 x29)
                                                in ffix1 (fun x27 x28 x29 ->
                                                     ((x27, x28), x29)) x26 x24)
                                               (fun x27 ->
                                               let (x28, x29) = x27 in
                                               let (x30, x31) = x28 in
                                               (((x25, x30), x31), x29))))
                                           (fun x22 ->
                                           let (x23, x24) = x22 in
                                           let (x25, x26) = x23 in
                                           x12 (Stdlib.succ 0) x13 (((Some
                                             (let (x27, _) = x25 in x27)),
                                             x24), x26))
                                       | None ->
                                         x12 (Stdlib.succ 0) x13 ((None,
                                           x20), x19))
                                   | _ ->
                                     (match x17 with
                                      | NUMBER _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27
                                                         in
                                                         let (x30, x31) = x28
                                                         in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_num x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)
                                      | _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.let_
                                              (let (x18, x19) = x14 in
                                               let (_, x20) = x18 in
                                               Runtime.ocaml_peek x20
                                                 (fun x21 ->
                                                 match x21 with
                                                 | Some _ ->
                                                   Runtime.let_
                                                     (Runtime.let_
                                                       (Runtime.ocaml_peek x20
                                                         (fun x22 ->
                                                         match x22 with
                                                         | Some x23 ->
                                                           if (=) x23 '{'
                                                           then Runtime.ocaml_drop
                                                                  x20
                                                                  (fun x24 ->
                                                                  ((LCURL, x5),
                                                                  x24))
                                                           else if (=) x23 '}'
                                                                then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x24))
                                                                else if 
                                                                      (=) x23
                                                                      '['
                                                                     then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x24))
                                                                     else 
                                                                      if 
                                                                      (=) x23
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                         | None ->
                                                           Runtime.failwith_
                                                             ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                       (fun x22 ->
                                                       let (x23, x24) = x22 in
                                                       let (x25, x26) = x23 in
                                                       Runtime.let_
                                                         (let rec ffix1 x27 x28 x29 =
                                                            Runtime.ocaml_peek
                                                              x29 (fun x30 ->
                                                              match x30 with
                                                              | Some x31 ->
                                                                if (||)
                                                                     ((&&)
                                                                      ((>=) x31
                                                                      '\t')
                                                                      ((<=) x31
                                                                      '\r'))
                                                                     ((=) x31
                                                                      ' ')
                                                                then Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x29
                                                                      (fun x32 ->
                                                                      (((),
                                                                      x28),
                                                                      x32)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      ffix1 x27
                                                                      x35 x34)
                                                                else x27 () x28
                                                                      x29
                                                              | None ->
                                                                x27 () x28 x29)
                                                          in ffix1
                                                               (fun x27 x28 x29 ->
                                                               ((x27, x28),
                                                               x29)) x26 x24)
                                                         (fun x27 ->
                                                         let (x28, x29) = x27
                                                         in
                                                         let (x30, x31) = x28
                                                         in
                                                         (((x25, x30), x31),
                                                         x29)))) (fun x22 ->
                                                     let (x23, x24) = x22 in
                                                     let (x25, x26) = x23 in
                                                     ((x17, x13), (((Some
                                                     (let (x27, _) = x25 in x27)),
                                                     x24), x26)))
                                                 | None ->
                                                   ((x17, x13), ((None, x20),
                                                     x19)))) (fun x18 ->
                                              let (x19, x20) = x18 in
                                              let (x21, x22) = x19 in
                                              (((match x21 with
                                                 | STRING x23 -> x23
                                                 | NUMBER x23 -> x23
                                                 | _ -> []), x22), x20)))
                                            (fun x18 ->
                                            let (x19, x20) = x18 in
                                            let (x21, x22) = x19 in
                                            (((Json_string x21), x22), x20)))
                                          (fun x18 ->
                                          let (x19, x20) = x18 in
                                          let (_, x21) = x19 in
                                          x12 (Stdlib.succ 0) x21 x20)))))
                          | _ ->
                            (match x17 with
                             | LCURL ->
                               Runtime.let_
                                 (Runtime.let_
                                   (let (x18, x19) = x14 in
                                    let (_, x20) = x18 in
                                    Runtime.ocaml_peek x20 (fun x21 ->
                                      match x21 with
                                      | Some _ ->
                                        Runtime.let_
                                          (Runtime.let_
                                            (Runtime.ocaml_peek x20 (fun x22 ->
                                              match x22 with
                                              | Some x23 ->
                                                if (=) x23 '{'
                                                then Runtime.ocaml_drop x20
                                                       (fun x24 -> ((LCURL,
                                                       x5), x24))
                                                else if (=) x23 '}'
                                                     then Runtime.ocaml_drop
                                                            x20 (fun x24 ->
                                                            ((RCURL, x5), x24))
                                                     else if (=) x23 '['
                                                          then Runtime.ocaml_drop
                                                                 x20
                                                                 (fun x24 ->
                                                                 ((LSQR, x5),
                                                                 x24))
                                                          else if (=) x23 ']'
                                                               then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                               else if 
                                                                      (=) x23
                                                                      ','
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                    else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                              | None ->
                                                Runtime.failwith_
                                                  ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                            (fun x22 ->
                                            let (x23, x24) = x22 in
                                            let (x25, x26) = x23 in
                                            Runtime.let_
                                              (let rec ffix1 x27 x28 x29 =
                                                 Runtime.ocaml_peek x29
                                                   (fun x30 ->
                                                   match x30 with
                                                   | Some x31 ->
                                                     if (||)
                                                          ((&&) ((>=) x31 '\t')
                                                            ((<=) x31 '\r'))
                                                          ((=) x31 ' ')
                                                     then Runtime.let_
                                                            (Runtime.ocaml_drop
                                                              x29 (fun x32 ->
                                                              (((), x28),
                                                              x32)))
                                                            (fun x32 ->
                                                            let (x33, x34) =
                                                              x32
                                                            in
                                                            let (_, x35) = x33
                                                            in
                                                            ffix1 x27 x35 x34)
                                                     else x27 () x28 x29
                                                   | None -> x27 () x28 x29)
                                               in ffix1 (fun x27 x28 x29 ->
                                                    ((x27, x28), x29)) x26 x24)
                                              (fun x27 ->
                                              let (x28, x29) = x27 in
                                              let (x30, x31) = x28 in
                                              (((x25, x30), x31), x29))))
                                          (fun x22 ->
                                          let (x23, x24) = x22 in
                                          let (x25, x26) = x23 in
                                          (((), x13), (((Some
                                          (let (x27, _) = x25 in x27)), x24),
                                          x26)))
                                      | None -> (((), x13), ((None, x20), x19))))
                                   (fun x18 ->
                                   let (x19, x20) = x18 in
                                   let (_, x21) = x19 in
                                   let (x22, _) = x20 in
                                   let (x23, _) = x22 in
                                   (match x23 with
                                    | Some x24 ->
                                      (match x24 with
                                       | RCURL ->
                                         Runtime.let_
                                           (let (x25, x26) = x20 in
                                            let (_, x27) = x25 in
                                            Runtime.ocaml_peek x27 (fun x28 ->
                                              match x28 with
                                              | Some _ ->
                                                Runtime.let_
                                                  (Runtime.let_
                                                    (Runtime.ocaml_peek x27
                                                      (fun x29 ->
                                                      match x29 with
                                                      | Some x30 ->
                                                        if (=) x30 '{'
                                                        then Runtime.ocaml_drop
                                                               x27 (fun x31 ->
                                                               ((LCURL, x5),
                                                               x31))
                                                        else if (=) x30 '}'
                                                             then Runtime.ocaml_drop
                                                                    x27
                                                                    (fun x31 ->
                                                                    ((RCURL,
                                                                    x5), x31))
                                                             else if (=) x30
                                                                      '['
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x31))
                                                                  else 
                                                                    if 
                                                                      (=) x30
                                                                      ']'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x31))
                                                                    else 
                                                                      if 
                                                                      (=) x30
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((TRUE,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((FALSE,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((NULL,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((x30,
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      let rec ffix1 x35 x36 x37 =

                                                                      Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x38 ->
                                                                      match x38 with
                                                                      | Some x39 ->
                                                                      if 
                                                                      (=) x39
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      (((),
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      x35 []
                                                                      x43 x42)
                                                                      else 
                                                                      if 
                                                                      (=) x39
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      (((),
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x42
                                                                      (fun x44 ->
                                                                      ffix1 x35
                                                                      x43 x44))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      ((x39,
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x45 x46 x47 ->
                                                                      ((x45,
                                                                      x46),
                                                                      x47)) x44
                                                                      x42)
                                                                      (fun x45 ->
                                                                      let (
                                                                      x46, x47) =
                                                                      x45
                                                                      in
                                                                      let (
                                                                      x48, x49) =
                                                                      x46
                                                                      in
                                                                      (((x43,
                                                                      x48),
                                                                      x49),
                                                                      x47))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      x35
                                                                      ((
                                                                      let (
                                                                      x45, _) =
                                                                      x43
                                                                      in
                                                                      x45) :: 
                                                                      (
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      x45)) x44
                                                                      x42)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x35 x36 x37 ->
                                                                      ((x35,
                                                                      x36),
                                                                      x37)) x34
                                                                      x33))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((STRING
                                                                      x34),
                                                                      x35),
                                                                      x33))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x30
                                                                      '0')
                                                                      ((<=) x30
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((x30,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x36 x37 x38 =

                                                                      Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x40
                                                                      '0')
                                                                      ((<=) x40
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x41 ->
                                                                      ((x40,
                                                                      x37),
                                                                      x41)))
                                                                      (fun x41 ->
                                                                      let (
                                                                      x42, x43) =
                                                                      x41
                                                                      in
                                                                      let (
                                                                      x44, x45) =
                                                                      x42
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x46 x47 x48 ->
                                                                      ((x46,
                                                                      x47),
                                                                      x48)) x45
                                                                      x43)
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      x49, x50) =
                                                                      x47
                                                                      in
                                                                      x36
                                                                      (x44 :: x49)
                                                                      x50 x48))
                                                                      else 
                                                                      x36 []
                                                                      x37 x38
                                                                      | None ->
                                                                      x36 []
                                                                      x37 x38)
                                                                      in 
                                                                      ffix1
                                                                      (fun x36 x37 x38 ->
                                                                      ((x36,
                                                                      x37),
                                                                      x38)) x35
                                                                      x33)
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      x39, x40) =
                                                                      x37
                                                                      in
                                                                      (((x34,
                                                                      x39),
                                                                      x40),
                                                                      x38))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x36, _) =
                                                                      x34
                                                                      in
                                                                      x36) :: 
                                                                      (
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x36)),
                                                                      x35),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((NUMBER
                                                                      x34),
                                                                      x35),
                                                                      x33))
                                                      | None ->
                                                        Runtime.failwith_
                                                          ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                    (fun x29 ->
                                                    let (x30, x31) = x29 in
                                                    let (x32, x33) = x30 in
                                                    Runtime.let_
                                                      (let rec ffix1 x34 x35 x36 =
                                                         Runtime.ocaml_peek x36
                                                           (fun x37 ->
                                                           match x37 with
                                                           | Some x38 ->
                                                             if (||)
                                                                  ((&&)
                                                                    ((>=) x38
                                                                      '\t')
                                                                    ((<=) x38
                                                                      '\r'))
                                                                  ((=) x38 ' ')
                                                             then Runtime.let_
                                                                    (Runtime.ocaml_drop
                                                                      x36
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x35),
                                                                      x39)))
                                                                    (fun x39 ->
                                                                    let (
                                                                      x40, x41) =
                                                                      x39
                                                                    in
                                                                    let (
                                                                      _, x42) =
                                                                      x40
                                                                    in
                                                                    ffix1 x34
                                                                      x42 x41)
                                                             else x34 () x35
                                                                    x36
                                                           | None ->
                                                             x34 () x35 x36)
                                                       in ffix1
                                                            (fun x34 x35 x36 ->
                                                            ((x34, x35), x36))
                                                            x33 x31)
                                                      (fun x34 ->
                                                      let (x35, x36) = x34 in
                                                      let (x37, x38) = x35 in
                                                      (((x32, x37), x38), x36))))
                                                  (fun x29 ->
                                                  let (x30, x31) = x29 in
                                                  let (x32, x33) = x30 in
                                                  (((), x21), (((Some
                                                  (let (x34, _) = x32 in x34)),
                                                  x31), x33)))
                                              | None ->
                                                (((), x21), ((None, x27), x26))))
                                           (fun x25 ->
                                           let (x26, x27) = x25 in
                                           let (_, x28) = x26 in
                                           (([], x28), x27))
                                       | _ ->
                                         Runtime.let_
                                           (Runtime.let_
                                             (Runtime.let_
                                               (Runtime.let_
                                                 (Runtime.let_
                                                   (Runtime.let_
                                                     (Runtime.let_
                                                       (match x24 with
                                                        | STRING _ ->
                                                          Runtime.let_
                                                            (let (x25, x26) =
                                                               x20
                                                             in
                                                             let (_, x27) = x25
                                                             in
                                                             Runtime.ocaml_peek
                                                               x27 (fun x28 ->
                                                               match x28 with
                                                               | Some _ ->
                                                                 Runtime.let_
                                                                   (Runtime.let_
                                                                     (Runtime.ocaml_peek
                                                                      x27
                                                                      (fun x29 ->
                                                                      match x29 with
                                                                      | Some x30 ->
                                                                      if 
                                                                      (=) x30
                                                                      '{'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((LCURL,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      '}'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      '['
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((TRUE,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((FALSE,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((NULL,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((x30,
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      let rec ffix1 x35 x36 x37 =

                                                                      Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x38 ->
                                                                      match x38 with
                                                                      | Some x39 ->
                                                                      if 
                                                                      (=) x39
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      (((),
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      x35 []
                                                                      x43 x42)
                                                                      else 
                                                                      if 
                                                                      (=) x39
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      (((),
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x42
                                                                      (fun x44 ->
                                                                      ffix1 x35
                                                                      x43 x44))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      ((x39,
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x45 x46 x47 ->
                                                                      ((x45,
                                                                      x46),
                                                                      x47)) x44
                                                                      x42)
                                                                      (fun x45 ->
                                                                      let (
                                                                      x46, x47) =
                                                                      x45
                                                                      in
                                                                      let (
                                                                      x48, x49) =
                                                                      x46
                                                                      in
                                                                      (((x43,
                                                                      x48),
                                                                      x49),
                                                                      x47))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      x35
                                                                      ((
                                                                      let (
                                                                      x45, _) =
                                                                      x43
                                                                      in
                                                                      x45) :: 
                                                                      (
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      x45)) x44
                                                                      x42)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x35 x36 x37 ->
                                                                      ((x35,
                                                                      x36),
                                                                      x37)) x34
                                                                      x33))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((STRING
                                                                      x34),
                                                                      x35),
                                                                      x33))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x30
                                                                      '0')
                                                                      ((<=) x30
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((x30,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x36 x37 x38 =

                                                                      Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x40
                                                                      '0')
                                                                      ((<=) x40
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x41 ->
                                                                      ((x40,
                                                                      x37),
                                                                      x41)))
                                                                      (fun x41 ->
                                                                      let (
                                                                      x42, x43) =
                                                                      x41
                                                                      in
                                                                      let (
                                                                      x44, x45) =
                                                                      x42
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x46 x47 x48 ->
                                                                      ((x46,
                                                                      x47),
                                                                      x48)) x45
                                                                      x43)
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      x49, x50) =
                                                                      x47
                                                                      in
                                                                      x36
                                                                      (x44 :: x49)
                                                                      x50 x48))
                                                                      else 
                                                                      x36 []
                                                                      x37 x38
                                                                      | None ->
                                                                      x36 []
                                                                      x37 x38)
                                                                      in 
                                                                      ffix1
                                                                      (fun x36 x37 x38 ->
                                                                      ((x36,
                                                                      x37),
                                                                      x38)) x35
                                                                      x33)
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      x39, x40) =
                                                                      x37
                                                                      in
                                                                      (((x34,
                                                                      x39),
                                                                      x40),
                                                                      x38))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x36, _) =
                                                                      x34
                                                                      in
                                                                      x36) :: 
                                                                      (
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x36)),
                                                                      x35),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((NUMBER
                                                                      x34),
                                                                      x35),
                                                                      x33))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                     (fun x29 ->
                                                                     let (
                                                                      x30, x31) =
                                                                      x29
                                                                     in
                                                                     let (
                                                                      x32, x33) =
                                                                      x30
                                                                     in
                                                                     Runtime.let_
                                                                      (let rec ffix1 x34 x35 x36 =

                                                                      Runtime.ocaml_peek
                                                                      x36
                                                                      (fun x37 ->
                                                                      match x37 with
                                                                      | Some x38 ->
                                                                      if 
                                                                      (||)
                                                                      ((&&)
                                                                      ((>=) x38
                                                                      '\t')
                                                                      ((<=) x38
                                                                      '\r'))
                                                                      ((=) x38
                                                                      ' ')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x36
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x35),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      ffix1 x34
                                                                      x42 x41)
                                                                      else 
                                                                      x34 ()
                                                                      x35 x36
                                                                      | None ->
                                                                      x34 ()
                                                                      x35 x36)
                                                                      in 
                                                                      ffix1
                                                                      (fun x34 x35 x36 ->
                                                                      ((x34,
                                                                      x35),
                                                                      x36)) x33
                                                                      x31)
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      (((x32,
                                                                      x37),
                                                                      x38),
                                                                      x36))))
                                                                   (fun x29 ->
                                                                   let (
                                                                     x30, x31) =
                                                                     x29
                                                                   in
                                                                   let (
                                                                     x32, x33) =
                                                                     x30
                                                                   in
                                                                   ((x24, x21),
                                                                   (((Some
                                                                   (let (
                                                                      x34, _) =
                                                                      x32
                                                                    in
                                                                    x34)),
                                                                   x31), x33)))
                                                               | None ->
                                                                 ((x24, x21),
                                                                   ((None,
                                                                   x27), x26))))
                                                            (fun x25 ->
                                                            let (x26, x27) =
                                                              x25
                                                            in
                                                            let (x28, x29) =
                                                              x26
                                                            in
                                                            (((match x28 with
                                                               | LCURL -> []
                                                               | RCURL -> []
                                                               | LSQR -> []
                                                               | RSQR -> []
                                                               | COMMA -> []
                                                               | COL -> []
                                                               | STRING x30 ->
                                                                 x30
                                                               | NUMBER x30 ->
                                                                 x30
                                                               | _ -> []),
                                                            x29), x27))
                                                        | _ ->
                                                          Runtime.failwith_
                                                            ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                       (fun x25 ->
                                                       let (x26, x27) = x25 in
                                                       let (_, x28) = x26 in
                                                       let (x29, _) = x27 in
                                                       let (x30, _) = x29 in
                                                       (match x30 with
                                                        | Some x31 ->
                                                          (match x31 with
                                                           | COL ->
                                                             let (x32, x33) =
                                                               x27
                                                             in
                                                             let (_, x34) = x32
                                                             in
                                                             Runtime.ocaml_peek
                                                               x34 (fun x35 ->
                                                               match x35 with
                                                               | Some _ ->
                                                                 Runtime.let_
                                                                   (Runtime.let_
                                                                     (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      '{'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      ((LCURL,
                                                                      x5),
                                                                      x38))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      '}'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x38))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      '['
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x38))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x38))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x38))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x38))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x5),
                                                                      x38)))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      (((),
                                                                      x41),
                                                                      x40)))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x40
                                                                      (fun x42 ->
                                                                      match x42 with
                                                                      | Some x43 ->
                                                                      if 
                                                                      (=) x43
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x40
                                                                      (fun x44 ->
                                                                      (((),
                                                                      x41),
                                                                      x44))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52))))))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      ((TRUE,
                                                                      x41),
                                                                      x40))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x5),
                                                                      x38)))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      (((),
                                                                      x41),
                                                                      x40)))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x40
                                                                      (fun x42 ->
                                                                      match x42 with
                                                                      | Some x43 ->
                                                                      if 
                                                                      (=) x43
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x40
                                                                      (fun x44 ->
                                                                      (((),
                                                                      x41),
                                                                      x44))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x52
                                                                      (fun x54 ->
                                                                      match x54 with
                                                                      | Some x55 ->
                                                                      if 
                                                                      (=) x55
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x52
                                                                      (fun x56 ->
                                                                      (((),
                                                                      x53),
                                                                      x56))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      (((),
                                                                      x57),
                                                                      x56)))))))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      ((FALSE,
                                                                      x41),
                                                                      x40))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x5),
                                                                      x38)))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      (((),
                                                                      x41),
                                                                      x40)))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x40
                                                                      (fun x42 ->
                                                                      match x42 with
                                                                      | Some x43 ->
                                                                      if 
                                                                      (=) x43
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x40
                                                                      (fun x44 ->
                                                                      (((),
                                                                      x41),
                                                                      x44))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52))))))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      ((NULL,
                                                                      x41),
                                                                      x40))
                                                                      else 
                                                                      if 
                                                                      (=) x37
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      ((x37,
                                                                      x5),
                                                                      x38)))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x41) =
                                                                      x39
                                                                      in
                                                                      let rec ffix1 x42 x43 x44 =

                                                                      Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x45 ->
                                                                      match x45 with
                                                                      | Some x46 ->
                                                                      if 
                                                                      (=) x46
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x47 ->
                                                                      (((),
                                                                      x43),
                                                                      x47)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      x42 []
                                                                      x50 x49)
                                                                      else 
                                                                      if 
                                                                      (=) x46
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x47 ->
                                                                      (((),
                                                                      x43),
                                                                      x47)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x51 ->
                                                                      ffix1 x42
                                                                      x50 x51))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x47 ->
                                                                      ((x46,
                                                                      x43),
                                                                      x47)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      x50, x51) =
                                                                      x48
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x52 x53 x54 ->
                                                                      ((x52,
                                                                      x53),
                                                                      x54)) x51
                                                                      x49)
                                                                      (fun x52 ->
                                                                      let (
                                                                      x53, x54) =
                                                                      x52
                                                                      in
                                                                      let (
                                                                      x55, x56) =
                                                                      x53
                                                                      in
                                                                      (((x50,
                                                                      x55),
                                                                      x56),
                                                                      x54))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      x50, x51) =
                                                                      x48
                                                                      in
                                                                      x42
                                                                      ((
                                                                      let (
                                                                      x52, _) =
                                                                      x50
                                                                      in
                                                                      x52) :: 
                                                                      (
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      x52)) x51
                                                                      x49)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x42 x43 x44 ->
                                                                      ((x42,
                                                                      x43),
                                                                      x44)) x41
                                                                      x40))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((STRING
                                                                      x41),
                                                                      x42),
                                                                      x40))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x37
                                                                      '0')
                                                                      ((<=) x37
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      ((x37,
                                                                      x5),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x43 x44 x45 =

                                                                      Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x47
                                                                      '0')
                                                                      ((<=) x47
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x48 ->
                                                                      ((x47,
                                                                      x44),
                                                                      x48)))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      x51, x52) =
                                                                      x49
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x53 x54 x55 ->
                                                                      ((x53,
                                                                      x54),
                                                                      x55)) x52
                                                                      x50)
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      x56, x57) =
                                                                      x54
                                                                      in
                                                                      x43
                                                                      (x51 :: x56)
                                                                      x57 x55))
                                                                      else 
                                                                      x43 []
                                                                      x44 x45
                                                                      | None ->
                                                                      x43 []
                                                                      x44 x45)
                                                                      in 
                                                                      ffix1
                                                                      (fun x43 x44 x45 ->
                                                                      ((x43,
                                                                      x44),
                                                                      x45)) x42
                                                                      x40)
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      x46, x47) =
                                                                      x44
                                                                      in
                                                                      (((x41,
                                                                      x46),
                                                                      x47),
                                                                      x45))))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x43, _) =
                                                                      x41
                                                                      in
                                                                      x43) :: 
                                                                      (
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      x43)),
                                                                      x42),
                                                                      x40)))
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((NUMBER
                                                                      x41),
                                                                      x42),
                                                                      x40))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                     (fun x36 ->
                                                                     let (
                                                                      x37, x38) =
                                                                      x36
                                                                     in
                                                                     let (
                                                                      x39, x40) =
                                                                      x37
                                                                     in
                                                                     Runtime.let_
                                                                      (let rec ffix1 x41 x42 x43 =

                                                                      Runtime.ocaml_peek
                                                                      x43
                                                                      (fun x44 ->
                                                                      match x44 with
                                                                      | Some x45 ->
                                                                      if 
                                                                      (||)
                                                                      ((&&)
                                                                      ((>=) x45
                                                                      '\t')
                                                                      ((<=) x45
                                                                      '\r'))
                                                                      ((=) x45
                                                                      ' ')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x43
                                                                      (fun x46 ->
                                                                      (((),
                                                                      x42),
                                                                      x46)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      ffix1 x41
                                                                      x49 x48)
                                                                      else 
                                                                      x41 ()
                                                                      x42 x43
                                                                      | None ->
                                                                      x41 ()
                                                                      x42 x43)
                                                                      in 
                                                                      ffix1
                                                                      (fun x41 x42 x43 ->
                                                                      ((x41,
                                                                      x42),
                                                                      x43)) x40
                                                                      x38)
                                                                      (fun x41 ->
                                                                      let (
                                                                      x42, x43) =
                                                                      x41
                                                                      in
                                                                      let (
                                                                      x44, x45) =
                                                                      x42
                                                                      in
                                                                      (((x39,
                                                                      x44),
                                                                      x45),
                                                                      x43))))
                                                                   (fun x36 ->
                                                                   let (
                                                                     x37, x38) =
                                                                     x36
                                                                   in
                                                                   let (
                                                                     x39, x40) =
                                                                     x37
                                                                   in
                                                                   (((), x28),
                                                                   (((Some
                                                                   (let (
                                                                      x41, _) =
                                                                      x39
                                                                    in
                                                                    x41)),
                                                                   x38), x40)))
                                                               | None ->
                                                                 (((), x28),
                                                                   ((None,
                                                                   x34), x33)))
                                                           | _ ->
                                                             Runtime.failwith_
                                                               ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                        | None ->
                                                          Runtime.failwith_
                                                            ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))))
                                                     (fun x25 ->
                                                     let (x26, x27) = x25 in
                                                     let (_, x28) = x26 in
                                                     ffix0 (fun x29 x30 x31 ->
                                                       ((x29, x30), x31)) x28
                                                       x27)) (fun x25 ->
                                                   let (x26, x27) = x25 in
                                                   let (x28, x29) = x26 in
                                                   (((Stdlib.succ x28),
                                                   x29), x27))) (fun x25 ->
                                                 let (x26, x27) = x25 in
                                                 let (x28, x29) = x26 in
                                                 Runtime.let_
                                                   (let rec ffix1 x30 x31 x32 = match x32 with
                                                    | (x33, _) ->
                                                      let (x34, _) = x33 in
                                                      (match x34 with
                                                       | Some x35 ->
                                                         (match x35 with
                                                          | COMMA ->
                                                            Runtime.let_
                                                              (Runtime.let_
                                                                (let (x36, x37) =
                                                                   x32
                                                                 in
                                                                 let (_, x38) =
                                                                   x36
                                                                 in
                                                                 Runtime.ocaml_peek
                                                                   x38
                                                                   (fun x39 ->
                                                                   match x39 with
                                                                   | Some _ ->
                                                                     Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      '{'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((LCURL,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      '}'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      '['
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x5),
                                                                      x42)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x52
                                                                      (fun x54 ->
                                                                      match x54 with
                                                                      | Some x55 ->
                                                                      if 
                                                                      (=) x55
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x52
                                                                      (fun x56 ->
                                                                      (((),
                                                                      x53),
                                                                      x56))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      (((),
                                                                      x57),
                                                                      x56))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      ((TRUE,
                                                                      x45),
                                                                      x44))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x5),
                                                                      x42)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x52
                                                                      (fun x54 ->
                                                                      match x54 with
                                                                      | Some x55 ->
                                                                      if 
                                                                      (=) x55
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x52
                                                                      (fun x56 ->
                                                                      (((),
                                                                      x53),
                                                                      x56))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      (((),
                                                                      x57),
                                                                      x56)))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x56
                                                                      (fun x58 ->
                                                                      match x58 with
                                                                      | Some x59 ->
                                                                      if 
                                                                      (=) x59
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x56
                                                                      (fun x60 ->
                                                                      (((),
                                                                      x57),
                                                                      x60))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x58 ->
                                                                      let (
                                                                      x59, x60) =
                                                                      x58
                                                                      in
                                                                      let (
                                                                      _, x61) =
                                                                      x59
                                                                      in
                                                                      (((),
                                                                      x61),
                                                                      x60)))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      ((FALSE,
                                                                      x45),
                                                                      x44))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x5),
                                                                      x42)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x52
                                                                      (fun x54 ->
                                                                      match x54 with
                                                                      | Some x55 ->
                                                                      if 
                                                                      (=) x55
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x52
                                                                      (fun x56 ->
                                                                      (((),
                                                                      x53),
                                                                      x56))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      (((),
                                                                      x57),
                                                                      x56))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      ((NULL,
                                                                      x45),
                                                                      x44))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((x41,
                                                                      x5),
                                                                      x42)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      let rec ffix2 x46 x47 x48 =

                                                                      Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x49 ->
                                                                      match x49 with
                                                                      | Some x50 ->
                                                                      if 
                                                                      (=) x50
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x51 ->
                                                                      (((),
                                                                      x47),
                                                                      x51)))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      x46 []
                                                                      x54 x53)
                                                                      else 
                                                                      if 
                                                                      (=) x50
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x51 ->
                                                                      (((),
                                                                      x47),
                                                                      x51)))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x53
                                                                      (fun x55 ->
                                                                      ffix2 x46
                                                                      x54 x55))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x51 ->
                                                                      ((x50,
                                                                      x47),
                                                                      x51)))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      x54, x55) =
                                                                      x52
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix2
                                                                      (fun x56 x57 x58 ->
                                                                      ((x56,
                                                                      x57),
                                                                      x58)) x55
                                                                      x53)
                                                                      (fun x56 ->
                                                                      let (
                                                                      x57, x58) =
                                                                      x56
                                                                      in
                                                                      let (
                                                                      x59, x60) =
                                                                      x57
                                                                      in
                                                                      (((x54,
                                                                      x59),
                                                                      x60),
                                                                      x58))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      x54, x55) =
                                                                      x52
                                                                      in
                                                                      x46
                                                                      ((
                                                                      let (
                                                                      x56, _) =
                                                                      x54
                                                                      in
                                                                      x56) :: 
                                                                      (
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      x56)) x55
                                                                      x53)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix2
                                                                      (fun x46 x47 x48 ->
                                                                      ((x46,
                                                                      x47),
                                                                      x48)) x45
                                                                      x44))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, x46) =
                                                                      x43
                                                                      in
                                                                      (((STRING
                                                                      x45),
                                                                      x46),
                                                                      x44))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x41
                                                                      '0')
                                                                      ((<=) x41
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((x41,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, x46) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix2 x47 x48 x49 =

                                                                      Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x51
                                                                      '0')
                                                                      ((<=) x51
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x52 ->
                                                                      ((x51,
                                                                      x48),
                                                                      x52)))
                                                                      (fun x52 ->
                                                                      let (
                                                                      x53, x54) =
                                                                      x52
                                                                      in
                                                                      let (
                                                                      x55, x56) =
                                                                      x53
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix2
                                                                      (fun x57 x58 x59 ->
                                                                      ((x57,
                                                                      x58),
                                                                      x59)) x56
                                                                      x54)
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      x60, x61) =
                                                                      x58
                                                                      in
                                                                      x47
                                                                      (x55 :: x60)
                                                                      x61 x59))
                                                                      else 
                                                                      x47 []
                                                                      x48 x49
                                                                      | None ->
                                                                      x47 []
                                                                      x48 x49)
                                                                      in 
                                                                      ffix2
                                                                      (fun x47 x48 x49 ->
                                                                      ((x47,
                                                                      x48),
                                                                      x49)) x46
                                                                      x44)
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      x50, x51) =
                                                                      x48
                                                                      in
                                                                      (((x45,
                                                                      x50),
                                                                      x51),
                                                                      x49))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, x46) =
                                                                      x43
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x47, _) =
                                                                      x45
                                                                      in
                                                                      x47) :: 
                                                                      (
                                                                      let (
                                                                      _, x47) =
                                                                      x45
                                                                      in
                                                                      x47)),
                                                                      x46),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, x46) =
                                                                      x43
                                                                      in
                                                                      (((NUMBER
                                                                      x45),
                                                                      x46),
                                                                      x44))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix2 x45 x46 x47 =

                                                                      Runtime.ocaml_peek
                                                                      x47
                                                                      (fun x48 ->
                                                                      match x48 with
                                                                      | Some x49 ->
                                                                      if 
                                                                      (||)
                                                                      ((&&)
                                                                      ((>=) x49
                                                                      '\t')
                                                                      ((<=) x49
                                                                      '\r'))
                                                                      ((=) x49
                                                                      ' ')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x47
                                                                      (fun x50 ->
                                                                      (((),
                                                                      x46),
                                                                      x50)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      ffix2 x45
                                                                      x53 x52)
                                                                      else 
                                                                      x45 ()
                                                                      x46 x47
                                                                      | None ->
                                                                      x45 ()
                                                                      x46 x47)
                                                                      in 
                                                                      ffix2
                                                                      (fun x45 x46 x47 ->
                                                                      ((x45,
                                                                      x46),
                                                                      x47)) x44
                                                                      x42)
                                                                      (fun x45 ->
                                                                      let (
                                                                      x46, x47) =
                                                                      x45
                                                                      in
                                                                      let (
                                                                      x48, x49) =
                                                                      x46
                                                                      in
                                                                      (((x43,
                                                                      x48),
                                                                      x49),
                                                                      x47))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      (((Some
                                                                      (
                                                                      let (
                                                                      x45, _) =
                                                                      x43
                                                                      in
                                                                      x45)),
                                                                      x42),
                                                                      x44)))
                                                                   | None ->
                                                                     (((),
                                                                      x31),
                                                                      ((None,
                                                                      x38),
                                                                      x37))))
                                                                (fun x36 ->
                                                                let (x37, x38) =
                                                                  x36
                                                                in
                                                                let (_, x39) =
                                                                  x37
                                                                in
                                                                Runtime.let_
                                                                  (Runtime.let_
                                                                    (Runtime.let_
                                                                      (
                                                                      let (
                                                                      x40, _) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, _) =
                                                                      x40
                                                                      in
                                                                      (
                                                                      match x41 with
                                                                      | Some x42 ->
                                                                      (match x42 with
                                                                      | STRING _ ->
                                                                      Runtime.let_
                                                                      (
                                                                      let (
                                                                      x43, x44) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some _ ->
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      '{'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      ((LCURL,
                                                                      x5),
                                                                      x49))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      '}'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x49))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      '['
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x49))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x49))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x49))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x49))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x5),
                                                                      x49)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      (((),
                                                                      x52),
                                                                      x51)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x51
                                                                      (fun x53 ->
                                                                      match x53 with
                                                                      | Some x54 ->
                                                                      if 
                                                                      (=) x54
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x51
                                                                      (fun x55 ->
                                                                      (((),
                                                                      x52),
                                                                      x55))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      (((),
                                                                      x56),
                                                                      x55)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x55
                                                                      (fun x57 ->
                                                                      match x57 with
                                                                      | Some x58 ->
                                                                      if 
                                                                      (=) x58
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x59 ->
                                                                      (((),
                                                                      x56),
                                                                      x59))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      (((),
                                                                      x60),
                                                                      x59)))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x59
                                                                      (fun x61 ->
                                                                      match x61 with
                                                                      | Some x62 ->
                                                                      if 
                                                                      (=) x62
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x63 ->
                                                                      (((),
                                                                      x60),
                                                                      x63))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      (((),
                                                                      x64),
                                                                      x63))))))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      ((TRUE,
                                                                      x52),
                                                                      x51))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x5),
                                                                      x49)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      (((),
                                                                      x52),
                                                                      x51)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x51
                                                                      (fun x53 ->
                                                                      match x53 with
                                                                      | Some x54 ->
                                                                      if 
                                                                      (=) x54
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x51
                                                                      (fun x55 ->
                                                                      (((),
                                                                      x52),
                                                                      x55))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      (((),
                                                                      x56),
                                                                      x55)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x55
                                                                      (fun x57 ->
                                                                      match x57 with
                                                                      | Some x58 ->
                                                                      if 
                                                                      (=) x58
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x59 ->
                                                                      (((),
                                                                      x56),
                                                                      x59))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      (((),
                                                                      x60),
                                                                      x59)))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x59
                                                                      (fun x61 ->
                                                                      match x61 with
                                                                      | Some x62 ->
                                                                      if 
                                                                      (=) x62
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x63 ->
                                                                      (((),
                                                                      x60),
                                                                      x63))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      (((),
                                                                      x64),
                                                                      x63)))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x63
                                                                      (fun x65 ->
                                                                      match x65 with
                                                                      | Some x66 ->
                                                                      if 
                                                                      (=) x66
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x63
                                                                      (fun x67 ->
                                                                      (((),
                                                                      x64),
                                                                      x67))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x65 ->
                                                                      let (
                                                                      x66, x67) =
                                                                      x65
                                                                      in
                                                                      let (
                                                                      _, x68) =
                                                                      x66
                                                                      in
                                                                      (((),
                                                                      x68),
                                                                      x67)))))))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      ((FALSE,
                                                                      x52),
                                                                      x51))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x5),
                                                                      x49)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      (((),
                                                                      x52),
                                                                      x51)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x51
                                                                      (fun x53 ->
                                                                      match x53 with
                                                                      | Some x54 ->
                                                                      if 
                                                                      (=) x54
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x51
                                                                      (fun x55 ->
                                                                      (((),
                                                                      x52),
                                                                      x55))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      (((),
                                                                      x56),
                                                                      x55)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x55
                                                                      (fun x57 ->
                                                                      match x57 with
                                                                      | Some x58 ->
                                                                      if 
                                                                      (=) x58
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x59 ->
                                                                      (((),
                                                                      x56),
                                                                      x59))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      (((),
                                                                      x60),
                                                                      x59)))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x59
                                                                      (fun x61 ->
                                                                      match x61 with
                                                                      | Some x62 ->
                                                                      if 
                                                                      (=) x62
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x63 ->
                                                                      (((),
                                                                      x60),
                                                                      x63))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      (((),
                                                                      x64),
                                                                      x63))))))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      ((NULL,
                                                                      x52),
                                                                      x51))
                                                                      else 
                                                                      if 
                                                                      (=) x48
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      ((x48,
                                                                      x5),
                                                                      x49)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      _, x52) =
                                                                      x50
                                                                      in
                                                                      let rec ffix2 x53 x54 x55 =

                                                                      Runtime.ocaml_peek
                                                                      x55
                                                                      (fun x56 ->
                                                                      match x56 with
                                                                      | Some x57 ->
                                                                      if 
                                                                      (=) x57
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x58 ->
                                                                      (((),
                                                                      x54),
                                                                      x58)))
                                                                      (fun x58 ->
                                                                      let (
                                                                      x59, x60) =
                                                                      x58
                                                                      in
                                                                      let (
                                                                      _, x61) =
                                                                      x59
                                                                      in
                                                                      x53 []
                                                                      x61 x60)
                                                                      else 
                                                                      if 
                                                                      (=) x57
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x58 ->
                                                                      (((),
                                                                      x54),
                                                                      x58)))
                                                                      (fun x58 ->
                                                                      let (
                                                                      x59, x60) =
                                                                      x58
                                                                      in
                                                                      let (
                                                                      _, x61) =
                                                                      x59
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x60
                                                                      (fun x62 ->
                                                                      ffix2 x53
                                                                      x61 x62))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x58 ->
                                                                      ((x57,
                                                                      x54),
                                                                      x58)))
                                                                      (fun x58 ->
                                                                      let (
                                                                      x59, x60) =
                                                                      x58
                                                                      in
                                                                      let (
                                                                      x61, x62) =
                                                                      x59
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix2
                                                                      (fun x63 x64 x65 ->
                                                                      ((x63,
                                                                      x64),
                                                                      x65)) x62
                                                                      x60)
                                                                      (fun x63 ->
                                                                      let (
                                                                      x64, x65) =
                                                                      x63
                                                                      in
                                                                      let (
                                                                      x66, x67) =
                                                                      x64
                                                                      in
                                                                      (((x61,
                                                                      x66),
                                                                      x67),
                                                                      x65))))
                                                                      (fun x58 ->
                                                                      let (
                                                                      x59, x60) =
                                                                      x58
                                                                      in
                                                                      let (
                                                                      x61, x62) =
                                                                      x59
                                                                      in
                                                                      x53
                                                                      ((
                                                                      let (
                                                                      x63, _) =
                                                                      x61
                                                                      in
                                                                      x63) :: 
                                                                      (
                                                                      let (
                                                                      _, x63) =
                                                                      x61
                                                                      in
                                                                      x63)) x62
                                                                      x60)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix2
                                                                      (fun x53 x54 x55 ->
                                                                      ((x53,
                                                                      x54),
                                                                      x55)) x52
                                                                      x51))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      x52, x53) =
                                                                      x50
                                                                      in
                                                                      (((STRING
                                                                      x52),
                                                                      x53),
                                                                      x51))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x48
                                                                      '0')
                                                                      ((<=) x48
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      ((x48,
                                                                      x5),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      x52, x53) =
                                                                      x50
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix2 x54 x55 x56 =

                                                                      Runtime.ocaml_peek
                                                                      x56
                                                                      (fun x57 ->
                                                                      match x57 with
                                                                      | Some x58 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x58
                                                                      '0')
                                                                      ((<=) x58
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x56
                                                                      (fun x59 ->
                                                                      ((x58,
                                                                      x55),
                                                                      x59)))
                                                                      (fun x59 ->
                                                                      let (
                                                                      x60, x61) =
                                                                      x59
                                                                      in
                                                                      let (
                                                                      x62, x63) =
                                                                      x60
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix2
                                                                      (fun x64 x65 x66 ->
                                                                      ((x64,
                                                                      x65),
                                                                      x66)) x63
                                                                      x61)
                                                                      (fun x64 ->
                                                                      let (
                                                                      x65, x66) =
                                                                      x64
                                                                      in
                                                                      let (
                                                                      x67, x68) =
                                                                      x65
                                                                      in
                                                                      x54
                                                                      (x62 :: x67)
                                                                      x68 x66))
                                                                      else 
                                                                      x54 []
                                                                      x55 x56
                                                                      | None ->
                                                                      x54 []
                                                                      x55 x56)
                                                                      in 
                                                                      ffix2
                                                                      (fun x54 x55 x56 ->
                                                                      ((x54,
                                                                      x55),
                                                                      x56)) x53
                                                                      x51)
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      x57, x58) =
                                                                      x55
                                                                      in
                                                                      (((x52,
                                                                      x57),
                                                                      x58),
                                                                      x56))))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      x52, x53) =
                                                                      x50
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x54, _) =
                                                                      x52
                                                                      in
                                                                      x54) :: 
                                                                      (
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      x54)),
                                                                      x53),
                                                                      x51)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      x52, x53) =
                                                                      x50
                                                                      in
                                                                      (((NUMBER
                                                                      x52),
                                                                      x53),
                                                                      x51))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      x50, x51) =
                                                                      x48
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix2 x52 x53 x54 =

                                                                      Runtime.ocaml_peek
                                                                      x54
                                                                      (fun x55 ->
                                                                      match x55 with
                                                                      | Some x56 ->
                                                                      if 
                                                                      (||)
                                                                      ((&&)
                                                                      ((>=) x56
                                                                      '\t')
                                                                      ((<=) x56
                                                                      '\r'))
                                                                      ((=) x56
                                                                      ' ')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x54
                                                                      (fun x57 ->
                                                                      (((),
                                                                      x53),
                                                                      x57)))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      ffix2 x52
                                                                      x60 x59)
                                                                      else 
                                                                      x52 ()
                                                                      x53 x54
                                                                      | None ->
                                                                      x52 ()
                                                                      x53 x54)
                                                                      in 
                                                                      ffix2
                                                                      (fun x52 x53 x54 ->
                                                                      ((x52,
                                                                      x53),
                                                                      x54)) x51
                                                                      x49)
                                                                      (fun x52 ->
                                                                      let (
                                                                      x53, x54) =
                                                                      x52
                                                                      in
                                                                      let (
                                                                      x55, x56) =
                                                                      x53
                                                                      in
                                                                      (((x50,
                                                                      x55),
                                                                      x56),
                                                                      x54))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      x50, x51) =
                                                                      x48
                                                                      in
                                                                      ((x42,
                                                                      x39),
                                                                      (((Some
                                                                      (
                                                                      let (
                                                                      x52, _) =
                                                                      x50
                                                                      in
                                                                      x52)),
                                                                      x49),
                                                                      x51)))
                                                                      | None ->
                                                                      ((x42,
                                                                      x39),
                                                                      ((None,
                                                                      x45),
                                                                      x44))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      x46, x47) =
                                                                      x44
                                                                      in
                                                                      (((
                                                                      match x46 with
                                                                      | LCURL ->
                                                                      []
                                                                      | RCURL ->
                                                                      []
                                                                      | LSQR ->
                                                                      []
                                                                      | RSQR ->
                                                                      []
                                                                      | COMMA ->
                                                                      []
                                                                      | COL ->
                                                                      []
                                                                      | STRING x48 ->
                                                                      x48
                                                                      | NUMBER x48 ->
                                                                      x48
                                                                      | _ -> []),
                                                                      x47),
                                                                      x45))
                                                                      | _ ->
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      let (
                                                                      x44, _) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, _) =
                                                                      x44
                                                                      in
                                                                      (
                                                                      match x45 with
                                                                      | Some x46 ->
                                                                      (match x46 with
                                                                      | COL ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some _ ->
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x51 ->
                                                                      match x51 with
                                                                      | Some x52 ->
                                                                      if 
                                                                      (=) x52
                                                                      '{'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      ((LCURL,
                                                                      x5),
                                                                      x53))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      '}'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x53))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      '['
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x53))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x53))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x53))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x53))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x5),
                                                                      x53)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      (((),
                                                                      x56),
                                                                      x55)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x55
                                                                      (fun x57 ->
                                                                      match x57 with
                                                                      | Some x58 ->
                                                                      if 
                                                                      (=) x58
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x59 ->
                                                                      (((),
                                                                      x56),
                                                                      x59))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      (((),
                                                                      x60),
                                                                      x59)))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x59
                                                                      (fun x61 ->
                                                                      match x61 with
                                                                      | Some x62 ->
                                                                      if 
                                                                      (=) x62
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x63 ->
                                                                      (((),
                                                                      x60),
                                                                      x63))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      (((),
                                                                      x64),
                                                                      x63)))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x63
                                                                      (fun x65 ->
                                                                      match x65 with
                                                                      | Some x66 ->
                                                                      if 
                                                                      (=) x66
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x63
                                                                      (fun x67 ->
                                                                      (((),
                                                                      x64),
                                                                      x67))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x65 ->
                                                                      let (
                                                                      x66, x67) =
                                                                      x65
                                                                      in
                                                                      let (
                                                                      _, x68) =
                                                                      x66
                                                                      in
                                                                      (((),
                                                                      x68),
                                                                      x67))))))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      ((TRUE,
                                                                      x56),
                                                                      x55))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x5),
                                                                      x53)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      (((),
                                                                      x56),
                                                                      x55)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x55
                                                                      (fun x57 ->
                                                                      match x57 with
                                                                      | Some x58 ->
                                                                      if 
                                                                      (=) x58
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x59 ->
                                                                      (((),
                                                                      x56),
                                                                      x59))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      (((),
                                                                      x60),
                                                                      x59)))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x59
                                                                      (fun x61 ->
                                                                      match x61 with
                                                                      | Some x62 ->
                                                                      if 
                                                                      (=) x62
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x63 ->
                                                                      (((),
                                                                      x60),
                                                                      x63))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      (((),
                                                                      x64),
                                                                      x63)))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x63
                                                                      (fun x65 ->
                                                                      match x65 with
                                                                      | Some x66 ->
                                                                      if 
                                                                      (=) x66
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x63
                                                                      (fun x67 ->
                                                                      (((),
                                                                      x64),
                                                                      x67))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x65 ->
                                                                      let (
                                                                      x66, x67) =
                                                                      x65
                                                                      in
                                                                      let (
                                                                      _, x68) =
                                                                      x66
                                                                      in
                                                                      (((),
                                                                      x68),
                                                                      x67)))
                                                                      (fun x65 ->
                                                                      let (
                                                                      x66, x67) =
                                                                      x65
                                                                      in
                                                                      let (
                                                                      _, x68) =
                                                                      x66
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x67
                                                                      (fun x69 ->
                                                                      match x69 with
                                                                      | Some x70 ->
                                                                      if 
                                                                      (=) x70
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x67
                                                                      (fun x71 ->
                                                                      (((),
                                                                      x68),
                                                                      x71))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x69 ->
                                                                      let (
                                                                      x70, x71) =
                                                                      x69
                                                                      in
                                                                      let (
                                                                      _, x72) =
                                                                      x70
                                                                      in
                                                                      (((),
                                                                      x72),
                                                                      x71)))))))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      ((FALSE,
                                                                      x56),
                                                                      x55))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x5),
                                                                      x53)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      (((),
                                                                      x56),
                                                                      x55)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x55
                                                                      (fun x57 ->
                                                                      match x57 with
                                                                      | Some x58 ->
                                                                      if 
                                                                      (=) x58
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x55
                                                                      (fun x59 ->
                                                                      (((),
                                                                      x56),
                                                                      x59))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      (((),
                                                                      x60),
                                                                      x59)))
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      _, x60) =
                                                                      x58
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x59
                                                                      (fun x61 ->
                                                                      match x61 with
                                                                      | Some x62 ->
                                                                      if 
                                                                      (=) x62
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x63 ->
                                                                      (((),
                                                                      x60),
                                                                      x63))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      (((),
                                                                      x64),
                                                                      x63)))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x63
                                                                      (fun x65 ->
                                                                      match x65 with
                                                                      | Some x66 ->
                                                                      if 
                                                                      (=) x66
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x63
                                                                      (fun x67 ->
                                                                      (((),
                                                                      x64),
                                                                      x67))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x65 ->
                                                                      let (
                                                                      x66, x67) =
                                                                      x65
                                                                      in
                                                                      let (
                                                                      _, x68) =
                                                                      x66
                                                                      in
                                                                      (((),
                                                                      x68),
                                                                      x67))))))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      ((NULL,
                                                                      x56),
                                                                      x55))
                                                                      else 
                                                                      if 
                                                                      (=) x52
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      ((x52,
                                                                      x5),
                                                                      x53)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      let rec ffix2 x57 x58 x59 =

                                                                      Runtime.ocaml_peek
                                                                      x59
                                                                      (fun x60 ->
                                                                      match x60 with
                                                                      | Some x61 ->
                                                                      if 
                                                                      (=) x61
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x62 ->
                                                                      (((),
                                                                      x58),
                                                                      x62)))
                                                                      (fun x62 ->
                                                                      let (
                                                                      x63, x64) =
                                                                      x62
                                                                      in
                                                                      let (
                                                                      _, x65) =
                                                                      x63
                                                                      in
                                                                      x57 []
                                                                      x65 x64)
                                                                      else 
                                                                      if 
                                                                      (=) x61
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x62 ->
                                                                      (((),
                                                                      x58),
                                                                      x62)))
                                                                      (fun x62 ->
                                                                      let (
                                                                      x63, x64) =
                                                                      x62
                                                                      in
                                                                      let (
                                                                      _, x65) =
                                                                      x63
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x64
                                                                      (fun x66 ->
                                                                      ffix2 x57
                                                                      x65 x66))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x59
                                                                      (fun x62 ->
                                                                      ((x61,
                                                                      x58),
                                                                      x62)))
                                                                      (fun x62 ->
                                                                      let (
                                                                      x63, x64) =
                                                                      x62
                                                                      in
                                                                      let (
                                                                      x65, x66) =
                                                                      x63
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix2
                                                                      (fun x67 x68 x69 ->
                                                                      ((x67,
                                                                      x68),
                                                                      x69)) x66
                                                                      x64)
                                                                      (fun x67 ->
                                                                      let (
                                                                      x68, x69) =
                                                                      x67
                                                                      in
                                                                      let (
                                                                      x70, x71) =
                                                                      x68
                                                                      in
                                                                      (((x65,
                                                                      x70),
                                                                      x71),
                                                                      x69))))
                                                                      (fun x62 ->
                                                                      let (
                                                                      x63, x64) =
                                                                      x62
                                                                      in
                                                                      let (
                                                                      x65, x66) =
                                                                      x63
                                                                      in
                                                                      x57
                                                                      ((
                                                                      let (
                                                                      x67, _) =
                                                                      x65
                                                                      in
                                                                      x67) :: 
                                                                      (
                                                                      let (
                                                                      _, x67) =
                                                                      x65
                                                                      in
                                                                      x67)) x66
                                                                      x64)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix2
                                                                      (fun x57 x58 x59 ->
                                                                      ((x57,
                                                                      x58),
                                                                      x59)) x56
                                                                      x55))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      x56, x57) =
                                                                      x54
                                                                      in
                                                                      (((STRING
                                                                      x56),
                                                                      x57),
                                                                      x55))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x52
                                                                      '0')
                                                                      ((<=) x52
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      ((x52,
                                                                      x5),
                                                                      x53))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      x56, x57) =
                                                                      x54
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix2 x58 x59 x60 =

                                                                      Runtime.ocaml_peek
                                                                      x60
                                                                      (fun x61 ->
                                                                      match x61 with
                                                                      | Some x62 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x62
                                                                      '0')
                                                                      ((<=) x62
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x60
                                                                      (fun x63 ->
                                                                      ((x62,
                                                                      x59),
                                                                      x63)))
                                                                      (fun x63 ->
                                                                      let (
                                                                      x64, x65) =
                                                                      x63
                                                                      in
                                                                      let (
                                                                      x66, x67) =
                                                                      x64
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix2
                                                                      (fun x68 x69 x70 ->
                                                                      ((x68,
                                                                      x69),
                                                                      x70)) x67
                                                                      x65)
                                                                      (fun x68 ->
                                                                      let (
                                                                      x69, x70) =
                                                                      x68
                                                                      in
                                                                      let (
                                                                      x71, x72) =
                                                                      x69
                                                                      in
                                                                      x58
                                                                      (x66 :: x71)
                                                                      x72 x70))
                                                                      else 
                                                                      x58 []
                                                                      x59 x60
                                                                      | None ->
                                                                      x58 []
                                                                      x59 x60)
                                                                      in 
                                                                      ffix2
                                                                      (fun x58 x59 x60 ->
                                                                      ((x58,
                                                                      x59),
                                                                      x60)) x57
                                                                      x55)
                                                                      (fun x58 ->
                                                                      let (
                                                                      x59, x60) =
                                                                      x58
                                                                      in
                                                                      let (
                                                                      x61, x62) =
                                                                      x59
                                                                      in
                                                                      (((x56,
                                                                      x61),
                                                                      x62),
                                                                      x60))))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      x56, x57) =
                                                                      x54
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x58, _) =
                                                                      x56
                                                                      in
                                                                      x58) :: 
                                                                      (
                                                                      let (
                                                                      _, x58) =
                                                                      x56
                                                                      in
                                                                      x58)),
                                                                      x57),
                                                                      x55)))
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      x56, x57) =
                                                                      x54
                                                                      in
                                                                      (((NUMBER
                                                                      x56),
                                                                      x57),
                                                                      x55))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      x54, x55) =
                                                                      x52
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix2 x56 x57 x58 =

                                                                      Runtime.ocaml_peek
                                                                      x58
                                                                      (fun x59 ->
                                                                      match x59 with
                                                                      | Some x60 ->
                                                                      if 
                                                                      (||)
                                                                      ((&&)
                                                                      ((>=) x60
                                                                      '\t')
                                                                      ((<=) x60
                                                                      '\r'))
                                                                      ((=) x60
                                                                      ' ')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x58
                                                                      (fun x61 ->
                                                                      (((),
                                                                      x57),
                                                                      x61)))
                                                                      (fun x61 ->
                                                                      let (
                                                                      x62, x63) =
                                                                      x61
                                                                      in
                                                                      let (
                                                                      _, x64) =
                                                                      x62
                                                                      in
                                                                      ffix2 x56
                                                                      x64 x63)
                                                                      else 
                                                                      x56 ()
                                                                      x57 x58
                                                                      | None ->
                                                                      x56 ()
                                                                      x57 x58)
                                                                      in 
                                                                      ffix2
                                                                      (fun x56 x57 x58 ->
                                                                      ((x56,
                                                                      x57),
                                                                      x58)) x55
                                                                      x53)
                                                                      (fun x56 ->
                                                                      let (
                                                                      x57, x58) =
                                                                      x56
                                                                      in
                                                                      let (
                                                                      x59, x60) =
                                                                      x57
                                                                      in
                                                                      (((x54,
                                                                      x59),
                                                                      x60),
                                                                      x58))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      x54, x55) =
                                                                      x52
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      (((Some
                                                                      (
                                                                      let (
                                                                      x56, _) =
                                                                      x54
                                                                      in
                                                                      x56)),
                                                                      x53),
                                                                      x55)))
                                                                      | None ->
                                                                      (((),
                                                                      x43),
                                                                      ((None,
                                                                      x49),
                                                                      x48)))
                                                                      | _ ->
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))))
                                                                    (fun x40 ->
                                                                    let (
                                                                      x41, x42) =
                                                                      x40
                                                                    in
                                                                    let (
                                                                      _, x43) =
                                                                      x41
                                                                    in
                                                                    ffix0
                                                                      (fun x44 x45 x46 ->
                                                                      ((x44,
                                                                      x45),
                                                                      x46)) x43
                                                                      x42))
                                                                  (fun x40 ->
                                                                  let (
                                                                    x41, x42) =
                                                                    x40
                                                                  in
                                                                  let (
                                                                    x43, x44) =
                                                                    x41
                                                                  in
                                                                  (((Stdlib.succ
                                                                  x43), x44),
                                                                  x42))))
                                                              (fun x36 ->
                                                              let (x37, x38) =
                                                                x36
                                                              in
                                                              let (x39, x40) =
                                                                x37
                                                              in
                                                              Runtime.let_
                                                                (ffix1
                                                                  (fun x41 x42 x43 ->
                                                                  ((x41, x42),
                                                                  x43)) x40
                                                                  x38)
                                                                (fun x41 ->
                                                                let (x42, x43) =
                                                                  x41
                                                                in
                                                                let (x44, x45) =
                                                                  x42
                                                                in
                                                                x30
                                                                  (x39 :: x44)
                                                                  x45 x43))
                                                          | _ -> x30 [] x31 x32)
                                                       | None -> x30 [] x31 x32)
                                                    in ffix1
                                                         (fun x30 x31 x32 ->
                                                         ((x30, x31), x32)) x29
                                                         x27) (fun x30 ->
                                                   let (x31, x32) = x30 in
                                                   let (x33, x34) = x31 in
                                                   (((x28, x33), x34), x32))))
                                               (fun x25 ->
                                               let (x26, x27) = x25 in
                                               let (x28, x29) = x26 in
                                               ((((let (x30, _) = x28 in x30) :: 
                                               (let (_, x30) = x28 in x30)),
                                               x29), x27))) (fun x25 ->
                                             let (x26, x27) = x25 in
                                             let (x28, x29) = x26 in
                                             Runtime.let_
                                               (let (x30, _) = x27 in
                                                let (x31, _) = x30 in
                                                (match x31 with
                                                 | Some x32 ->
                                                   (match x32 with
                                                    | RCURL ->
                                                      let (x33, x34) = x27 in
                                                      let (_, x35) = x33 in
                                                      Runtime.ocaml_peek x35
                                                        (fun x36 ->
                                                        match x36 with
                                                        | Some _ ->
                                                          Runtime.let_
                                                            (Runtime.let_
                                                              (Runtime.ocaml_peek
                                                                x35 (fun x37 ->
                                                                match x37 with
                                                                | Some x38 ->
                                                                  if (=) x38
                                                                      '{'
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((LCURL,
                                                                      x5),
                                                                      x39))
                                                                  else 
                                                                    if 
                                                                      (=) x38
                                                                      '}'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x39))
                                                                    else 
                                                                      if 
                                                                      (=) x38
                                                                      '['
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x5),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x51 ->
                                                                      match x51 with
                                                                      | Some x52 ->
                                                                      if 
                                                                      (=) x52
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x50),
                                                                      x53))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      (((),
                                                                      x54),
                                                                      x53))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      ((TRUE,
                                                                      x42),
                                                                      x41))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x5),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x51 ->
                                                                      match x51 with
                                                                      | Some x52 ->
                                                                      if 
                                                                      (=) x52
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x50),
                                                                      x53))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      (((),
                                                                      x54),
                                                                      x53)))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x53
                                                                      (fun x55 ->
                                                                      match x55 with
                                                                      | Some x56 ->
                                                                      if 
                                                                      (=) x56
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x53
                                                                      (fun x57 ->
                                                                      (((),
                                                                      x54),
                                                                      x57))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x55 ->
                                                                      let (
                                                                      x56, x57) =
                                                                      x55
                                                                      in
                                                                      let (
                                                                      _, x58) =
                                                                      x56
                                                                      in
                                                                      (((),
                                                                      x58),
                                                                      x57)))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      ((FALSE,
                                                                      x42),
                                                                      x41))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x5),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x51 ->
                                                                      match x51 with
                                                                      | Some x52 ->
                                                                      if 
                                                                      (=) x52
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x50),
                                                                      x53))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      (((),
                                                                      x54),
                                                                      x53))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      ((NULL,
                                                                      x42),
                                                                      x41))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((x38,
                                                                      x5),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      let rec ffix1 x43 x44 x45 =

                                                                      Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x44),
                                                                      x48)))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      _, x51) =
                                                                      x49
                                                                      in
                                                                      x43 []
                                                                      x51 x50)
                                                                      else 
                                                                      if 
                                                                      (=) x47
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x44),
                                                                      x48)))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      _, x51) =
                                                                      x49
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x50
                                                                      (fun x52 ->
                                                                      ffix1 x43
                                                                      x51 x52))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x48 ->
                                                                      ((x47,
                                                                      x44),
                                                                      x48)))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      x51, x52) =
                                                                      x49
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x53 x54 x55 ->
                                                                      ((x53,
                                                                      x54),
                                                                      x55)) x52
                                                                      x50)
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      x56, x57) =
                                                                      x54
                                                                      in
                                                                      (((x51,
                                                                      x56),
                                                                      x57),
                                                                      x55))))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      x51, x52) =
                                                                      x49
                                                                      in
                                                                      x43
                                                                      ((
                                                                      let (
                                                                      x53, _) =
                                                                      x51
                                                                      in
                                                                      x53) :: 
                                                                      (
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      x53)) x52
                                                                      x50)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x43 x44 x45 ->
                                                                      ((x43,
                                                                      x44),
                                                                      x45)) x42
                                                                      x41))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      (((STRING
                                                                      x42),
                                                                      x43),
                                                                      x41))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x38
                                                                      '0')
                                                                      ((<=) x38
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((x38,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x44 x45 x46 =

                                                                      Runtime.ocaml_peek
                                                                      x46
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x48
                                                                      '0')
                                                                      ((<=) x48
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x46
                                                                      (fun x49 ->
                                                                      ((x48,
                                                                      x45),
                                                                      x49)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      x52, x53) =
                                                                      x50
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x54 x55 x56 ->
                                                                      ((x54,
                                                                      x55),
                                                                      x56)) x53
                                                                      x51)
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      x57, x58) =
                                                                      x55
                                                                      in
                                                                      x44
                                                                      (x52 :: x57)
                                                                      x58 x56))
                                                                      else 
                                                                      x44 []
                                                                      x45 x46
                                                                      | None ->
                                                                      x44 []
                                                                      x45 x46)
                                                                      in 
                                                                      ffix1
                                                                      (fun x44 x45 x46 ->
                                                                      ((x44,
                                                                      x45),
                                                                      x46)) x43
                                                                      x41)
                                                                      (fun x44 ->
                                                                      let (
                                                                      x45, x46) =
                                                                      x44
                                                                      in
                                                                      let (
                                                                      x47, x48) =
                                                                      x45
                                                                      in
                                                                      (((x42,
                                                                      x47),
                                                                      x48),
                                                                      x46))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x44, _) =
                                                                      x42
                                                                      in
                                                                      x44) :: 
                                                                      (
                                                                      let (
                                                                      _, x44) =
                                                                      x42
                                                                      in
                                                                      x44)),
                                                                      x43),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      (((NUMBER
                                                                      x42),
                                                                      x43),
                                                                      x41))
                                                                | None ->
                                                                  Runtime.failwith_
                                                                    ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                              (fun x37 ->
                                                              let (x38, x39) =
                                                                x37
                                                              in
                                                              let (x40, x41) =
                                                                x38
                                                              in
                                                              Runtime.let_
                                                                (let rec ffix1 x42 x43 x44 =
                                                                   Runtime.ocaml_peek
                                                                     x44
                                                                     (fun x45 ->
                                                                     match x45 with
                                                                     | Some x46 ->
                                                                      if 
                                                                      (||)
                                                                      ((&&)
                                                                      ((>=) x46
                                                                      '\t')
                                                                      ((<=) x46
                                                                      '\r'))
                                                                      ((=) x46
                                                                      ' ')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x47 ->
                                                                      (((),
                                                                      x43),
                                                                      x47)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      ffix1 x42
                                                                      x50 x49)
                                                                      else 
                                                                      x42 ()
                                                                      x43 x44
                                                                     | None ->
                                                                      x42 ()
                                                                      x43 x44)
                                                                 in ffix1
                                                                      (fun x42 x43 x44 ->
                                                                      ((x42,
                                                                      x43),
                                                                      x44)) x41
                                                                      x39)
                                                                (fun x42 ->
                                                                let (x43, x44) =
                                                                  x42
                                                                in
                                                                let (x45, x46) =
                                                                  x43
                                                                in
                                                                (((x40, x45),
                                                                x46), x44))))
                                                            (fun x37 ->
                                                            let (x38, x39) =
                                                              x37
                                                            in
                                                            let (x40, x41) =
                                                              x38
                                                            in
                                                            (((), x29), (((Some
                                                            (let (x42, _) = x40
                                                             in
                                                             x42)), x39), x41)))
                                                        | None ->
                                                          (((), x29), ((None,
                                                            x35), x34)))
                                                    | _ ->
                                                      Runtime.failwith_
                                                        ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                 | None ->
                                                   Runtime.failwith_
                                                     ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                               (fun x30 ->
                                               let (x31, x32) = x30 in
                                               let (x33, x34) = x31 in
                                               (((x28, x33), x34), x32))))
                                           (fun x25 ->
                                           let (x26, x27) = x25 in
                                           let (x28, x29) = x26 in
                                           (((let (x30, _) = x28 in x30), x29),
                                           x27)))
                                    | None ->
                                      Runtime.failwith_
                                        ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))))
                                 (fun x18 ->
                                 let (x19, x20) = x18 in
                                 let (x21, x22) = x19 in
                                 x12
                                   (let rec ffix1 x23 = function
                                    | [] -> x23
                                    | x25 :: x26 -> ffix1 ((+) x23 x25) x26
                                    in ffix1 0 x21) x22 x20)
                             | _ ->
                               Runtime.let_
                                 (Runtime.let_
                                   (match x17 with
                                    | LSQR ->
                                      let (x18, x19) = x14 in
                                      let (_, x20) = x18 in
                                      Runtime.ocaml_peek x20 (fun x21 ->
                                        match x21 with
                                        | Some _ ->
                                          Runtime.let_
                                            (Runtime.let_
                                              (Runtime.ocaml_peek x20
                                                (fun x22 ->
                                                match x22 with
                                                | Some x23 ->
                                                  if (=) x23 '{'
                                                  then Runtime.ocaml_drop x20
                                                         (fun x24 -> ((LCURL,
                                                         x5), x24))
                                                  else if (=) x23 '}'
                                                       then Runtime.ocaml_drop
                                                              x20 (fun x24 ->
                                                              ((RCURL, x5),
                                                              x24))
                                                       else if (=) x23 '['
                                                            then Runtime.ocaml_drop
                                                                   x20
                                                                   (fun x24 ->
                                                                   ((LSQR, x5),
                                                                   x24))
                                                            else if (=) x23 ']'
                                                                 then Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x24))
                                                                 else if 
                                                                      (=) x23
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((TRUE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38)))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x39),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x43),
                                                                      x42)))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((FALSE,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      (((),
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      (((),
                                                                      x27),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x26
                                                                      (fun x28 ->
                                                                      match x28 with
                                                                      | Some x29 ->
                                                                      if 
                                                                      (=) x29
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x26
                                                                      (fun x30 ->
                                                                      (((),
                                                                      x27),
                                                                      x30))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      x30)))
                                                                      (fun x28 ->
                                                                      let (
                                                                      x29, x30) =
                                                                      x28
                                                                      in
                                                                      let (
                                                                      _, x31) =
                                                                      x29
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (=) x33
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x34 ->
                                                                      (((),
                                                                      x31),
                                                                      x34))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      (((),
                                                                      x35),
                                                                      x34)))
                                                                      (fun x32 ->
                                                                      let (
                                                                      x33, x34) =
                                                                      x32
                                                                      in
                                                                      let (
                                                                      _, x35) =
                                                                      x33
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x34
                                                                      (fun x36 ->
                                                                      match x36 with
                                                                      | Some x37 ->
                                                                      if 
                                                                      (=) x37
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x34
                                                                      (fun x38 ->
                                                                      (((),
                                                                      x35),
                                                                      x38))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      _, x39) =
                                                                      x37
                                                                      in
                                                                      (((),
                                                                      x39),
                                                                      x38))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      ((NULL,
                                                                      x27),
                                                                      x26))
                                                                      else 
                                                                      if 
                                                                      (=) x23
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      _, x27) =
                                                                      x25
                                                                      in
                                                                      let rec ffix1 x28 x29 x30 =

                                                                      Runtime.ocaml_peek
                                                                      x30
                                                                      (fun x31 ->
                                                                      match x31 with
                                                                      | Some x32 ->
                                                                      if 
                                                                      (=) x32
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x28 []
                                                                      x36 x35)
                                                                      else 
                                                                      if 
                                                                      (=) x32
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      (((),
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x37 ->
                                                                      ffix1 x28
                                                                      x36 x37))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x30
                                                                      (fun x33 ->
                                                                      ((x32,
                                                                      x29),
                                                                      x33)))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x38 x39 x40 ->
                                                                      ((x38,
                                                                      x39),
                                                                      x40)) x37
                                                                      x35)
                                                                      (fun x38 ->
                                                                      let (
                                                                      x39, x40) =
                                                                      x38
                                                                      in
                                                                      let (
                                                                      x41, x42) =
                                                                      x39
                                                                      in
                                                                      (((x36,
                                                                      x41),
                                                                      x42),
                                                                      x40))))
                                                                      (fun x33 ->
                                                                      let (
                                                                      x34, x35) =
                                                                      x33
                                                                      in
                                                                      let (
                                                                      x36, x37) =
                                                                      x34
                                                                      in
                                                                      x28
                                                                      ((
                                                                      let (
                                                                      x38, _) =
                                                                      x36
                                                                      in
                                                                      x38) :: 
                                                                      (
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      x38)) x37
                                                                      x35)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x28 x29 x30 ->
                                                                      ((x28,
                                                                      x29),
                                                                      x30)) x27
                                                                      x26))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((STRING
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x23
                                                                      '0')
                                                                      ((<=) x23
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x20
                                                                      (fun x24 ->
                                                                      ((x23,
                                                                      x5),
                                                                      x24))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x29 x30 x31 =

                                                                      Runtime.ocaml_peek
                                                                      x31
                                                                      (fun x32 ->
                                                                      match x32 with
                                                                      | Some x33 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x33
                                                                      '0')
                                                                      ((<=) x33
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x31
                                                                      (fun x34 ->
                                                                      ((x33,
                                                                      x30),
                                                                      x34)))
                                                                      (fun x34 ->
                                                                      let (
                                                                      x35, x36) =
                                                                      x34
                                                                      in
                                                                      let (
                                                                      x37, x38) =
                                                                      x35
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x39 x40 x41 ->
                                                                      ((x39,
                                                                      x40),
                                                                      x41)) x38
                                                                      x36)
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      x29
                                                                      (x37 :: x42)
                                                                      x43 x41))
                                                                      else 
                                                                      x29 []
                                                                      x30 x31
                                                                      | None ->
                                                                      x29 []
                                                                      x30 x31)
                                                                      in 
                                                                      ffix1
                                                                      (fun x29 x30 x31 ->
                                                                      ((x29,
                                                                      x30),
                                                                      x31)) x28
                                                                      x26)
                                                                      (fun x29 ->
                                                                      let (
                                                                      x30, x31) =
                                                                      x29
                                                                      in
                                                                      let (
                                                                      x32, x33) =
                                                                      x30
                                                                      in
                                                                      (((x27,
                                                                      x32),
                                                                      x33),
                                                                      x31))))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x29, _) =
                                                                      x27
                                                                      in
                                                                      x29) :: 
                                                                      (
                                                                      let (
                                                                      _, x29) =
                                                                      x27
                                                                      in
                                                                      x29)),
                                                                      x28),
                                                                      x26)))
                                                                      (fun x24 ->
                                                                      let (
                                                                      x25, x26) =
                                                                      x24
                                                                      in
                                                                      let (
                                                                      x27, x28) =
                                                                      x25
                                                                      in
                                                                      (((NUMBER
                                                                      x27),
                                                                      x28),
                                                                      x26))
                                                | None ->
                                                  Runtime.failwith_
                                                    ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                              (fun x22 ->
                                              let (x23, x24) = x22 in
                                              let (x25, x26) = x23 in
                                              Runtime.let_
                                                (let rec ffix1 x27 x28 x29 =
                                                   Runtime.ocaml_peek x29
                                                     (fun x30 ->
                                                     match x30 with
                                                     | Some x31 ->
                                                       if (||)
                                                            ((&&)
                                                              ((>=) x31 '\t')
                                                              ((<=) x31 '\r'))
                                                            ((=) x31 ' ')
                                                       then Runtime.let_
                                                              (Runtime.ocaml_drop
                                                                x29 (fun x32 ->
                                                                (((), x28),
                                                                x32)))
                                                              (fun x32 ->
                                                              let (x33, x34) =
                                                                x32
                                                              in
                                                              let (_, x35) =
                                                                x33
                                                              in
                                                              ffix1 x27 x35 x34)
                                                       else x27 () x28 x29
                                                     | None -> x27 () x28 x29)
                                                 in ffix1 (fun x27 x28 x29 ->
                                                      ((x27, x28), x29)) x26
                                                      x24) (fun x27 ->
                                                let (x28, x29) = x27 in
                                                let (x30, x31) = x28 in
                                                (((x25, x30), x31), x29))))
                                            (fun x22 ->
                                            let (x23, x24) = x22 in
                                            let (x25, x26) = x23 in
                                            (((), x13), (((Some
                                            (let (x27, _) = x25 in x27)), x24),
                                            x26)))
                                        | None ->
                                          (((), x13), ((None, x20), x19)))
                                    | _ ->
                                      Runtime.failwith_
                                        ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                   (fun x18 ->
                                   let (x19, x20) = x18 in
                                   let (_, x21) = x19 in
                                   let (x22, _) = x20 in
                                   let (x23, _) = x22 in
                                   (match x23 with
                                    | Some x24 ->
                                      (match x24 with
                                       | RSQR ->
                                         Runtime.let_
                                           (let (x25, x26) = x20 in
                                            let (_, x27) = x25 in
                                            Runtime.ocaml_peek x27 (fun x28 ->
                                              match x28 with
                                              | Some _ ->
                                                Runtime.let_
                                                  (Runtime.let_
                                                    (Runtime.ocaml_peek x27
                                                      (fun x29 ->
                                                      match x29 with
                                                      | Some x30 ->
                                                        if (=) x30 '{'
                                                        then Runtime.ocaml_drop
                                                               x27 (fun x31 ->
                                                               ((LCURL, x5),
                                                               x31))
                                                        else if (=) x30 '}'
                                                             then Runtime.ocaml_drop
                                                                    x27
                                                                    (fun x31 ->
                                                                    ((RCURL,
                                                                    x5), x31))
                                                             else if (=) x30
                                                                      '['
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x31))
                                                                  else 
                                                                    if 
                                                                      (=) x30
                                                                      ']'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x31))
                                                                    else 
                                                                      if 
                                                                      (=) x30
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((TRUE,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((FALSE,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      (((),
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      (((),
                                                                      x34),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x33
                                                                      (fun x35 ->
                                                                      match x35 with
                                                                      | Some x36 ->
                                                                      if 
                                                                      (=) x36
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x33
                                                                      (fun x37 ->
                                                                      (((),
                                                                      x34),
                                                                      x37))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      (((),
                                                                      x38),
                                                                      x37)))
                                                                      (fun x35 ->
                                                                      let (
                                                                      x36, x37) =
                                                                      x35
                                                                      in
                                                                      let (
                                                                      _, x38) =
                                                                      x36
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (=) x40
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x41 ->
                                                                      (((),
                                                                      x38),
                                                                      x41))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      ((NULL,
                                                                      x34),
                                                                      x33))
                                                                      else 
                                                                      if 
                                                                      (=) x30
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((x30,
                                                                      x5),
                                                                      x31)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      _, x34) =
                                                                      x32
                                                                      in
                                                                      let rec ffix1 x35 x36 x37 =

                                                                      Runtime.ocaml_peek
                                                                      x37
                                                                      (fun x38 ->
                                                                      match x38 with
                                                                      | Some x39 ->
                                                                      if 
                                                                      (=) x39
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      (((),
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      x35 []
                                                                      x43 x42)
                                                                      else 
                                                                      if 
                                                                      (=) x39
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      (((),
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      _, x43) =
                                                                      x41
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x42
                                                                      (fun x44 ->
                                                                      ffix1 x35
                                                                      x43 x44))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x37
                                                                      (fun x40 ->
                                                                      ((x39,
                                                                      x36),
                                                                      x40)))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x45 x46 x47 ->
                                                                      ((x45,
                                                                      x46),
                                                                      x47)) x44
                                                                      x42)
                                                                      (fun x45 ->
                                                                      let (
                                                                      x46, x47) =
                                                                      x45
                                                                      in
                                                                      let (
                                                                      x48, x49) =
                                                                      x46
                                                                      in
                                                                      (((x43,
                                                                      x48),
                                                                      x49),
                                                                      x47))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      x35
                                                                      ((
                                                                      let (
                                                                      x45, _) =
                                                                      x43
                                                                      in
                                                                      x45) :: 
                                                                      (
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      x45)) x44
                                                                      x42)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x35 x36 x37 ->
                                                                      ((x35,
                                                                      x36),
                                                                      x37)) x34
                                                                      x33))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((STRING
                                                                      x34),
                                                                      x35),
                                                                      x33))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x30
                                                                      '0')
                                                                      ((<=) x30
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x27
                                                                      (fun x31 ->
                                                                      ((x30,
                                                                      x5),
                                                                      x31))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x36 x37 x38 =

                                                                      Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x39 ->
                                                                      match x39 with
                                                                      | Some x40 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x40
                                                                      '0')
                                                                      ((<=) x40
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x41 ->
                                                                      ((x40,
                                                                      x37),
                                                                      x41)))
                                                                      (fun x41 ->
                                                                      let (
                                                                      x42, x43) =
                                                                      x41
                                                                      in
                                                                      let (
                                                                      x44, x45) =
                                                                      x42
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x46 x47 x48 ->
                                                                      ((x46,
                                                                      x47),
                                                                      x48)) x45
                                                                      x43)
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      x49, x50) =
                                                                      x47
                                                                      in
                                                                      x36
                                                                      (x44 :: x49)
                                                                      x50 x48))
                                                                      else 
                                                                      x36 []
                                                                      x37 x38
                                                                      | None ->
                                                                      x36 []
                                                                      x37 x38)
                                                                      in 
                                                                      ffix1
                                                                      (fun x36 x37 x38 ->
                                                                      ((x36,
                                                                      x37),
                                                                      x38)) x35
                                                                      x33)
                                                                      (fun x36 ->
                                                                      let (
                                                                      x37, x38) =
                                                                      x36
                                                                      in
                                                                      let (
                                                                      x39, x40) =
                                                                      x37
                                                                      in
                                                                      (((x34,
                                                                      x39),
                                                                      x40),
                                                                      x38))))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x36, _) =
                                                                      x34
                                                                      in
                                                                      x36) :: 
                                                                      (
                                                                      let (
                                                                      _, x36) =
                                                                      x34
                                                                      in
                                                                      x36)),
                                                                      x35),
                                                                      x33)))
                                                                      (fun x31 ->
                                                                      let (
                                                                      x32, x33) =
                                                                      x31
                                                                      in
                                                                      let (
                                                                      x34, x35) =
                                                                      x32
                                                                      in
                                                                      (((NUMBER
                                                                      x34),
                                                                      x35),
                                                                      x33))
                                                      | None ->
                                                        Runtime.failwith_
                                                          ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                    (fun x29 ->
                                                    let (x30, x31) = x29 in
                                                    let (x32, x33) = x30 in
                                                    Runtime.let_
                                                      (let rec ffix1 x34 x35 x36 =
                                                         Runtime.ocaml_peek x36
                                                           (fun x37 ->
                                                           match x37 with
                                                           | Some x38 ->
                                                             if (||)
                                                                  ((&&)
                                                                    ((>=) x38
                                                                      '\t')
                                                                    ((<=) x38
                                                                      '\r'))
                                                                  ((=) x38 ' ')
                                                             then Runtime.let_
                                                                    (Runtime.ocaml_drop
                                                                      x36
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x35),
                                                                      x39)))
                                                                    (fun x39 ->
                                                                    let (
                                                                      x40, x41) =
                                                                      x39
                                                                    in
                                                                    let (
                                                                      _, x42) =
                                                                      x40
                                                                    in
                                                                    ffix1 x34
                                                                      x42 x41)
                                                             else x34 () x35
                                                                    x36
                                                           | None ->
                                                             x34 () x35 x36)
                                                       in ffix1
                                                            (fun x34 x35 x36 ->
                                                            ((x34, x35), x36))
                                                            x33 x31)
                                                      (fun x34 ->
                                                      let (x35, x36) = x34 in
                                                      let (x37, x38) = x35 in
                                                      (((x32, x37), x38), x36))))
                                                  (fun x29 ->
                                                  let (x30, x31) = x29 in
                                                  let (x32, x33) = x30 in
                                                  (((), x21), (((Some
                                                  (let (x34, _) = x32 in x34)),
                                                  x31), x33)))
                                              | None ->
                                                (((), x21), ((None, x27), x26))))
                                           (fun x25 ->
                                           let (x26, x27) = x25 in
                                           let (_, x28) = x26 in
                                           (([], x28), x27))
                                       | _ ->
                                         Runtime.let_
                                           (Runtime.let_
                                             (Runtime.let_
                                               (Runtime.let_
                                                 (ffix0 (fun x25 x26 x27 ->
                                                   ((x25, x26), x27)) x21 x20)
                                                 (fun x25 ->
                                                 let (x26, x27) = x25 in
                                                 let (x28, x29) = x26 in
                                                 Runtime.let_
                                                   (let rec ffix1 x30 x31 x32 = match x32 with
                                                    | (x33, _) ->
                                                      let (x34, _) = x33 in
                                                      (match x34 with
                                                       | Some x35 ->
                                                         (match x35 with
                                                          | COMMA ->
                                                            Runtime.let_
                                                              (Runtime.let_
                                                                (let (x36, x37) =
                                                                   x32
                                                                 in
                                                                 let (_, x38) =
                                                                   x36
                                                                 in
                                                                 Runtime.ocaml_peek
                                                                   x38
                                                                   (fun x39 ->
                                                                   match x39 with
                                                                   | Some _ ->
                                                                     Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x38
                                                                      (fun x40 ->
                                                                      match x40 with
                                                                      | Some x41 ->
                                                                      if 
                                                                      (=) x41
                                                                      '{'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((LCURL,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      '}'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      '['
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x5),
                                                                      x42)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x52
                                                                      (fun x54 ->
                                                                      match x54 with
                                                                      | Some x55 ->
                                                                      if 
                                                                      (=) x55
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x52
                                                                      (fun x56 ->
                                                                      (((),
                                                                      x53),
                                                                      x56))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      (((),
                                                                      x57),
                                                                      x56))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      ((TRUE,
                                                                      x45),
                                                                      x44))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x5),
                                                                      x42)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x52
                                                                      (fun x54 ->
                                                                      match x54 with
                                                                      | Some x55 ->
                                                                      if 
                                                                      (=) x55
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x52
                                                                      (fun x56 ->
                                                                      (((),
                                                                      x53),
                                                                      x56))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      (((),
                                                                      x57),
                                                                      x56)))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x56
                                                                      (fun x58 ->
                                                                      match x58 with
                                                                      | Some x59 ->
                                                                      if 
                                                                      (=) x59
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x56
                                                                      (fun x60 ->
                                                                      (((),
                                                                      x57),
                                                                      x60))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x58 ->
                                                                      let (
                                                                      x59, x60) =
                                                                      x58
                                                                      in
                                                                      let (
                                                                      _, x61) =
                                                                      x59
                                                                      in
                                                                      (((),
                                                                      x61),
                                                                      x60)))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      ((FALSE,
                                                                      x45),
                                                                      x44))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      (((),
                                                                      x5),
                                                                      x42)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      (((),
                                                                      x45),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x44
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x45),
                                                                      x48))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      (((),
                                                                      x49),
                                                                      x48)))
                                                                      (fun x46 ->
                                                                      let (
                                                                      x47, x48) =
                                                                      x46
                                                                      in
                                                                      let (
                                                                      _, x49) =
                                                                      x47
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (=) x51
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x52 ->
                                                                      (((),
                                                                      x49),
                                                                      x52))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      (((),
                                                                      x53),
                                                                      x52)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x52
                                                                      (fun x54 ->
                                                                      match x54 with
                                                                      | Some x55 ->
                                                                      if 
                                                                      (=) x55
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x52
                                                                      (fun x56 ->
                                                                      (((),
                                                                      x53),
                                                                      x56))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      _, x57) =
                                                                      x55
                                                                      in
                                                                      (((),
                                                                      x57),
                                                                      x56))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      ((NULL,
                                                                      x45),
                                                                      x44))
                                                                      else 
                                                                      if 
                                                                      (=) x41
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((x41,
                                                                      x5),
                                                                      x42)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      _, x45) =
                                                                      x43
                                                                      in
                                                                      let rec ffix2 x46 x47 x48 =

                                                                      Runtime.ocaml_peek
                                                                      x48
                                                                      (fun x49 ->
                                                                      match x49 with
                                                                      | Some x50 ->
                                                                      if 
                                                                      (=) x50
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x51 ->
                                                                      (((),
                                                                      x47),
                                                                      x51)))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      x46 []
                                                                      x54 x53)
                                                                      else 
                                                                      if 
                                                                      (=) x50
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x51 ->
                                                                      (((),
                                                                      x47),
                                                                      x51)))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x53
                                                                      (fun x55 ->
                                                                      ffix2 x46
                                                                      x54 x55))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x48
                                                                      (fun x51 ->
                                                                      ((x50,
                                                                      x47),
                                                                      x51)))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      x54, x55) =
                                                                      x52
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix2
                                                                      (fun x56 x57 x58 ->
                                                                      ((x56,
                                                                      x57),
                                                                      x58)) x55
                                                                      x53)
                                                                      (fun x56 ->
                                                                      let (
                                                                      x57, x58) =
                                                                      x56
                                                                      in
                                                                      let (
                                                                      x59, x60) =
                                                                      x57
                                                                      in
                                                                      (((x54,
                                                                      x59),
                                                                      x60),
                                                                      x58))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      x54, x55) =
                                                                      x52
                                                                      in
                                                                      x46
                                                                      ((
                                                                      let (
                                                                      x56, _) =
                                                                      x54
                                                                      in
                                                                      x56) :: 
                                                                      (
                                                                      let (
                                                                      _, x56) =
                                                                      x54
                                                                      in
                                                                      x56)) x55
                                                                      x53)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix2
                                                                      (fun x46 x47 x48 ->
                                                                      ((x46,
                                                                      x47),
                                                                      x48)) x45
                                                                      x44))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, x46) =
                                                                      x43
                                                                      in
                                                                      (((STRING
                                                                      x45),
                                                                      x46),
                                                                      x44))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x41
                                                                      '0')
                                                                      ((<=) x41
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x38
                                                                      (fun x42 ->
                                                                      ((x41,
                                                                      x5),
                                                                      x42))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, x46) =
                                                                      x43
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix2 x47 x48 x49 =

                                                                      Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x50 ->
                                                                      match x50 with
                                                                      | Some x51 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x51
                                                                      '0')
                                                                      ((<=) x51
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x52 ->
                                                                      ((x51,
                                                                      x48),
                                                                      x52)))
                                                                      (fun x52 ->
                                                                      let (
                                                                      x53, x54) =
                                                                      x52
                                                                      in
                                                                      let (
                                                                      x55, x56) =
                                                                      x53
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix2
                                                                      (fun x57 x58 x59 ->
                                                                      ((x57,
                                                                      x58),
                                                                      x59)) x56
                                                                      x54)
                                                                      (fun x57 ->
                                                                      let (
                                                                      x58, x59) =
                                                                      x57
                                                                      in
                                                                      let (
                                                                      x60, x61) =
                                                                      x58
                                                                      in
                                                                      x47
                                                                      (x55 :: x60)
                                                                      x61 x59))
                                                                      else 
                                                                      x47 []
                                                                      x48 x49
                                                                      | None ->
                                                                      x47 []
                                                                      x48 x49)
                                                                      in 
                                                                      ffix2
                                                                      (fun x47 x48 x49 ->
                                                                      ((x47,
                                                                      x48),
                                                                      x49)) x46
                                                                      x44)
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      x50, x51) =
                                                                      x48
                                                                      in
                                                                      (((x45,
                                                                      x50),
                                                                      x51),
                                                                      x49))))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, x46) =
                                                                      x43
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x47, _) =
                                                                      x45
                                                                      in
                                                                      x47) :: 
                                                                      (
                                                                      let (
                                                                      _, x47) =
                                                                      x45
                                                                      in
                                                                      x47)),
                                                                      x46),
                                                                      x44)))
                                                                      (fun x42 ->
                                                                      let (
                                                                      x43, x44) =
                                                                      x42
                                                                      in
                                                                      let (
                                                                      x45, x46) =
                                                                      x43
                                                                      in
                                                                      (((NUMBER
                                                                      x45),
                                                                      x46),
                                                                      x44))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix2 x45 x46 x47 =

                                                                      Runtime.ocaml_peek
                                                                      x47
                                                                      (fun x48 ->
                                                                      match x48 with
                                                                      | Some x49 ->
                                                                      if 
                                                                      (||)
                                                                      ((&&)
                                                                      ((>=) x49
                                                                      '\t')
                                                                      ((<=) x49
                                                                      '\r'))
                                                                      ((=) x49
                                                                      ' ')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x47
                                                                      (fun x50 ->
                                                                      (((),
                                                                      x46),
                                                                      x50)))
                                                                      (fun x50 ->
                                                                      let (
                                                                      x51, x52) =
                                                                      x50
                                                                      in
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      ffix2 x45
                                                                      x53 x52)
                                                                      else 
                                                                      x45 ()
                                                                      x46 x47
                                                                      | None ->
                                                                      x45 ()
                                                                      x46 x47)
                                                                      in 
                                                                      ffix2
                                                                      (fun x45 x46 x47 ->
                                                                      ((x45,
                                                                      x46),
                                                                      x47)) x44
                                                                      x42)
                                                                      (fun x45 ->
                                                                      let (
                                                                      x46, x47) =
                                                                      x45
                                                                      in
                                                                      let (
                                                                      x48, x49) =
                                                                      x46
                                                                      in
                                                                      (((x43,
                                                                      x48),
                                                                      x49),
                                                                      x47))))
                                                                      (fun x40 ->
                                                                      let (
                                                                      x41, x42) =
                                                                      x40
                                                                      in
                                                                      let (
                                                                      x43, x44) =
                                                                      x41
                                                                      in
                                                                      (((),
                                                                      x31),
                                                                      (((Some
                                                                      (
                                                                      let (
                                                                      x45, _) =
                                                                      x43
                                                                      in
                                                                      x45)),
                                                                      x42),
                                                                      x44)))
                                                                   | None ->
                                                                     (((),
                                                                      x31),
                                                                      ((None,
                                                                      x38),
                                                                      x37))))
                                                                (fun x36 ->
                                                                let (x37, x38) =
                                                                  x36
                                                                in
                                                                let (_, x39) =
                                                                  x37
                                                                in
                                                                ffix0
                                                                  (fun x40 x41 x42 ->
                                                                  ((x40, x41),
                                                                  x42)) x39 x38))
                                                              (fun x36 ->
                                                              let (x37, x38) =
                                                                x36
                                                              in
                                                              let (x39, x40) =
                                                                x37
                                                              in
                                                              Runtime.let_
                                                                (ffix1
                                                                  (fun x41 x42 x43 ->
                                                                  ((x41, x42),
                                                                  x43)) x40
                                                                  x38)
                                                                (fun x41 ->
                                                                let (x42, x43) =
                                                                  x41
                                                                in
                                                                let (x44, x45) =
                                                                  x42
                                                                in
                                                                x30
                                                                  (x39 :: x44)
                                                                  x45 x43))
                                                          | _ -> x30 [] x31 x32)
                                                       | None -> x30 [] x31 x32)
                                                    in ffix1
                                                         (fun x30 x31 x32 ->
                                                         ((x30, x31), x32)) x29
                                                         x27) (fun x30 ->
                                                   let (x31, x32) = x30 in
                                                   let (x33, x34) = x31 in
                                                   (((x28, x33), x34), x32))))
                                               (fun x25 ->
                                               let (x26, x27) = x25 in
                                               let (x28, x29) = x26 in
                                               ((((let (x30, _) = x28 in x30) :: 
                                               (let (_, x30) = x28 in x30)),
                                               x29), x27))) (fun x25 ->
                                             let (x26, x27) = x25 in
                                             let (x28, x29) = x26 in
                                             Runtime.let_
                                               (let (x30, _) = x27 in
                                                let (x31, _) = x30 in
                                                (match x31 with
                                                 | Some x32 ->
                                                   (match x32 with
                                                    | RSQR ->
                                                      let (x33, x34) = x27 in
                                                      let (_, x35) = x33 in
                                                      Runtime.ocaml_peek x35
                                                        (fun x36 ->
                                                        match x36 with
                                                        | Some _ ->
                                                          Runtime.let_
                                                            (Runtime.let_
                                                              (Runtime.ocaml_peek
                                                                x35 (fun x37 ->
                                                                match x37 with
                                                                | Some x38 ->
                                                                  if (=) x38
                                                                      '{'
                                                                  then 
                                                                    Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((LCURL,
                                                                      x5),
                                                                      x39))
                                                                  else 
                                                                    if 
                                                                      (=) x38
                                                                      '}'
                                                                    then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((RCURL,
                                                                      x5),
                                                                      x39))
                                                                    else 
                                                                      if 
                                                                      (=) x38
                                                                      '['
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((LSQR,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      ']'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((RSQR,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      ','
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((COMMA,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      ':'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((COL,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      't'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x5),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'r'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x51 ->
                                                                      match x51 with
                                                                      | Some x52 ->
                                                                      if 
                                                                      (=) x52
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x50),
                                                                      x53))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      (((),
                                                                      x54),
                                                                      x53))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      ((TRUE,
                                                                      x42),
                                                                      x41))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      'f'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x5),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'a'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x51 ->
                                                                      match x51 with
                                                                      | Some x52 ->
                                                                      if 
                                                                      (=) x52
                                                                      's'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x50),
                                                                      x53))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      (((),
                                                                      x54),
                                                                      x53)))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x53
                                                                      (fun x55 ->
                                                                      match x55 with
                                                                      | Some x56 ->
                                                                      if 
                                                                      (=) x56
                                                                      'e'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x53
                                                                      (fun x57 ->
                                                                      (((),
                                                                      x54),
                                                                      x57))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x55 ->
                                                                      let (
                                                                      x56, x57) =
                                                                      x55
                                                                      in
                                                                      let (
                                                                      _, x58) =
                                                                      x56
                                                                      in
                                                                      (((),
                                                                      x58),
                                                                      x57)))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      ((FALSE,
                                                                      x42),
                                                                      x41))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      'n'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      (((),
                                                                      x5),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      (((),
                                                                      x42),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x41
                                                                      (fun x43 ->
                                                                      match x43 with
                                                                      | Some x44 ->
                                                                      if 
                                                                      (=) x44
                                                                      'u'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x41
                                                                      (fun x45 ->
                                                                      (((),
                                                                      x42),
                                                                      x45))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      (((),
                                                                      x46),
                                                                      x45)))
                                                                      (fun x43 ->
                                                                      let (
                                                                      x44, x45) =
                                                                      x43
                                                                      in
                                                                      let (
                                                                      _, x46) =
                                                                      x44
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (=) x48
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x49 ->
                                                                      (((),
                                                                      x46),
                                                                      x49))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      (((),
                                                                      x50),
                                                                      x49)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_peek
                                                                      x49
                                                                      (fun x51 ->
                                                                      match x51 with
                                                                      | Some x52 ->
                                                                      if 
                                                                      (=) x52
                                                                      'l'
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x49
                                                                      (fun x53 ->
                                                                      (((),
                                                                      x50),
                                                                      x53))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[]))))))))))))))))))))))))))))))
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                                      (fun x51 ->
                                                                      let (
                                                                      x52, x53) =
                                                                      x51
                                                                      in
                                                                      let (
                                                                      _, x54) =
                                                                      x52
                                                                      in
                                                                      (((),
                                                                      x54),
                                                                      x53))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      ((NULL,
                                                                      x42),
                                                                      x41))
                                                                      else 
                                                                      if 
                                                                      (=) x38
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((x38,
                                                                      x5),
                                                                      x39)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      _, x42) =
                                                                      x40
                                                                      in
                                                                      let rec ffix1 x43 x44 x45 =

                                                                      Runtime.ocaml_peek
                                                                      x45
                                                                      (fun x46 ->
                                                                      match x46 with
                                                                      | Some x47 ->
                                                                      if 
                                                                      (=) x47
                                                                      '"'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x44),
                                                                      x48)))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      _, x51) =
                                                                      x49
                                                                      in
                                                                      x43 []
                                                                      x51 x50)
                                                                      else 
                                                                      if 
                                                                      (=) x47
                                                                      '\\'
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x48 ->
                                                                      (((),
                                                                      x44),
                                                                      x48)))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      _, x51) =
                                                                      x49
                                                                      in
                                                                      Runtime.ocaml_drop
                                                                      x50
                                                                      (fun x52 ->
                                                                      ffix1 x43
                                                                      x51 x52))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x45
                                                                      (fun x48 ->
                                                                      ((x47,
                                                                      x44),
                                                                      x48)))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      x51, x52) =
                                                                      x49
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x53 x54 x55 ->
                                                                      ((x53,
                                                                      x54),
                                                                      x55)) x52
                                                                      x50)
                                                                      (fun x53 ->
                                                                      let (
                                                                      x54, x55) =
                                                                      x53
                                                                      in
                                                                      let (
                                                                      x56, x57) =
                                                                      x54
                                                                      in
                                                                      (((x51,
                                                                      x56),
                                                                      x57),
                                                                      x55))))
                                                                      (fun x48 ->
                                                                      let (
                                                                      x49, x50) =
                                                                      x48
                                                                      in
                                                                      let (
                                                                      x51, x52) =
                                                                      x49
                                                                      in
                                                                      x43
                                                                      ((
                                                                      let (
                                                                      x53, _) =
                                                                      x51
                                                                      in
                                                                      x53) :: 
                                                                      (
                                                                      let (
                                                                      _, x53) =
                                                                      x51
                                                                      in
                                                                      x53)) x52
                                                                      x50)
                                                                      | None ->
                                                                      Runtime.failwith_
                                                                      ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                                                                      in 
                                                                      ffix1
                                                                      (fun x43 x44 x45 ->
                                                                      ((x43,
                                                                      x44),
                                                                      x45)) x42
                                                                      x41))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      (((STRING
                                                                      x42),
                                                                      x43),
                                                                      x41))
                                                                      else 
                                                                      Runtime.let_
                                                                      (Runtime.let_
                                                                      (Runtime.let_
                                                                      (if 
                                                                      (&&)
                                                                      ((>=) x38
                                                                      '0')
                                                                      ((<=) x38
                                                                      '9')
                                                                      then 
                                                                      Runtime.ocaml_drop
                                                                      x35
                                                                      (fun x39 ->
                                                                      ((x38,
                                                                      x5),
                                                                      x39))
                                                                      else 
                                                                      Runtime.failwith_
                                                                      ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      Runtime.let_
                                                                      (let rec ffix1 x44 x45 x46 =

                                                                      Runtime.ocaml_peek
                                                                      x46
                                                                      (fun x47 ->
                                                                      match x47 with
                                                                      | Some x48 ->
                                                                      if 
                                                                      (&&)
                                                                      ((>=) x48
                                                                      '0')
                                                                      ((<=) x48
                                                                      '9')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x46
                                                                      (fun x49 ->
                                                                      ((x48,
                                                                      x45),
                                                                      x49)))
                                                                      (fun x49 ->
                                                                      let (
                                                                      x50, x51) =
                                                                      x49
                                                                      in
                                                                      let (
                                                                      x52, x53) =
                                                                      x50
                                                                      in
                                                                      Runtime.let_
                                                                      (ffix1
                                                                      (fun x54 x55 x56 ->
                                                                      ((x54,
                                                                      x55),
                                                                      x56)) x53
                                                                      x51)
                                                                      (fun x54 ->
                                                                      let (
                                                                      x55, x56) =
                                                                      x54
                                                                      in
                                                                      let (
                                                                      x57, x58) =
                                                                      x55
                                                                      in
                                                                      x44
                                                                      (x52 :: x57)
                                                                      x58 x56))
                                                                      else 
                                                                      x44 []
                                                                      x45 x46
                                                                      | None ->
                                                                      x44 []
                                                                      x45 x46)
                                                                      in 
                                                                      ffix1
                                                                      (fun x44 x45 x46 ->
                                                                      ((x44,
                                                                      x45),
                                                                      x46)) x43
                                                                      x41)
                                                                      (fun x44 ->
                                                                      let (
                                                                      x45, x46) =
                                                                      x44
                                                                      in
                                                                      let (
                                                                      x47, x48) =
                                                                      x45
                                                                      in
                                                                      (((x42,
                                                                      x47),
                                                                      x48),
                                                                      x46))))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      (((
                                                                      (
                                                                      let (
                                                                      x44, _) =
                                                                      x42
                                                                      in
                                                                      x44) :: 
                                                                      (
                                                                      let (
                                                                      _, x44) =
                                                                      x42
                                                                      in
                                                                      x44)),
                                                                      x43),
                                                                      x41)))
                                                                      (fun x39 ->
                                                                      let (
                                                                      x40, x41) =
                                                                      x39
                                                                      in
                                                                      let (
                                                                      x42, x43) =
                                                                      x40
                                                                      in
                                                                      (((NUMBER
                                                                      x42),
                                                                      x43),
                                                                      x41))
                                                                | None ->
                                                                  Runtime.failwith_
                                                                    ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                                              (fun x37 ->
                                                              let (x38, x39) =
                                                                x37
                                                              in
                                                              let (x40, x41) =
                                                                x38
                                                              in
                                                              Runtime.let_
                                                                (let rec ffix1 x42 x43 x44 =
                                                                   Runtime.ocaml_peek
                                                                     x44
                                                                     (fun x45 ->
                                                                     match x45 with
                                                                     | Some x46 ->
                                                                      if 
                                                                      (||)
                                                                      ((&&)
                                                                      ((>=) x46
                                                                      '\t')
                                                                      ((<=) x46
                                                                      '\r'))
                                                                      ((=) x46
                                                                      ' ')
                                                                      then 
                                                                      Runtime.let_
                                                                      (Runtime.ocaml_drop
                                                                      x44
                                                                      (fun x47 ->
                                                                      (((),
                                                                      x43),
                                                                      x47)))
                                                                      (fun x47 ->
                                                                      let (
                                                                      x48, x49) =
                                                                      x47
                                                                      in
                                                                      let (
                                                                      _, x50) =
                                                                      x48
                                                                      in
                                                                      ffix1 x42
                                                                      x50 x49)
                                                                      else 
                                                                      x42 ()
                                                                      x43 x44
                                                                     | None ->
                                                                      x42 ()
                                                                      x43 x44)
                                                                 in ffix1
                                                                      (fun x42 x43 x44 ->
                                                                      ((x42,
                                                                      x43),
                                                                      x44)) x41
                                                                      x39)
                                                                (fun x42 ->
                                                                let (x43, x44) =
                                                                  x42
                                                                in
                                                                let (x45, x46) =
                                                                  x43
                                                                in
                                                                (((x40, x45),
                                                                x46), x44))))
                                                            (fun x37 ->
                                                            let (x38, x39) =
                                                              x37
                                                            in
                                                            let (x40, x41) =
                                                              x38
                                                            in
                                                            (((), x29), (((Some
                                                            (let (x42, _) = x40
                                                             in
                                                             x42)), x39), x41)))
                                                        | None ->
                                                          (((), x29), ((None,
                                                            x35), x34)))
                                                    | _ ->
                                                      Runtime.failwith_
                                                        ('p'::('a'::('r'::('s'::('e'::('_'::('e'::('x'::('a'::('c'::('t'::(':'::(' '::('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('T'::('o'::('k'::('e'::('n'::('!'::[])))))))))))))))))))))))))))))))
                                                 | None ->
                                                   Runtime.failwith_
                                                     ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[])))))))))))))))))
                                               (fun x30 ->
                                               let (x31, x32) = x30 in
                                               let (x33, x34) = x31 in
                                               (((x28, x33), x34), x32))))
                                           (fun x25 ->
                                           let (x26, x27) = x25 in
                                           let (x28, x29) = x26 in
                                           (((let (x30, _) = x28 in x30), x29),
                                           x27)))
                                    | None ->
                                      Runtime.failwith_
                                        ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))))
                                 (fun x18 ->
                                 let (x19, x20) = x18 in
                                 let (x21, x22) = x19 in
                                 x12
                                   (let rec ffix1 x23 = function
                                    | [] -> x23
                                    | x25 :: x26 -> ffix1 ((+) x23 x25) x26
                                    in ffix1 0 x21) x22 x20)))
                       | None ->
                         Runtime.failwith_
                           ('U'::('n'::('e'::('x'::('p'::('e'::('c'::('t'::('e'::('d'::(' '::('E'::('O'::('F'::('!'::[]))))))))))))))))
                    in ffix0 (fun x12 x13 x14 -> ((x12, x13), x14)) x7 x8)
                   (fun x12 ->
                   let (x13, x14) = x12 in
                   let (x15, x16) = x13 in
                   Runtime.let_
                     (ffix (fun x17 x18 x19 -> ((x17, x18), x19)) x16 x14)
                     (fun x17 ->
                     let (x18, x19) = x17 in
                     let (x20, x21) = x18 in x6 (x15 :: x20) x21 x19)))
            | None -> x6 [] x7 x8)
         in ffix (fun x6 x7 x8 -> ((x6, x7), x8)) (let (_, x6) = x in x6)
              (((Some (let (x6, _) = x4 in x6)), x3), x5)) (fun x6 ->
        let (x7, _) = x6 in
        let (x8, _) = x7 in
        let rec ffix x9 = function
        | [] -> x9
        | x11 :: x12 -> ffix ((+) x9 x11) x12
        in ffix 0 x8))
end

let make_stream (str : 'a P_json.ocaml_stream) : ('a P_json.ocaml_stream, 'a) P_json.stream =
  {
    state = str;
    peek_st = (fun _ -> Runtime.ocaml_peek);
    drop_st = (fun _ -> Runtime.ocaml_drop);
    lookahead_st = (fun _ -> Runtime.ocaml_lookahead);
  }

let stream_of_string s = make_stream (Runtime.from_string s)

let parse stream = P_json.p_full_json_opt ((),()) stream
